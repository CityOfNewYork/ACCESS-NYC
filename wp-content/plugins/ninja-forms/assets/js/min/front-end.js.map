{"version":3,"sources":["../../../config-wrap-start-default.js","../lib/almond.js","models/fieldErrorModel.js","models/fieldErrorCollection.js","models/fieldModel.js","models/fieldCollection.js","models/formErrorModel.js","models/formErrorCollection.js","models/formModel.js","models/formCollection.js","controllers/formData.js","controllers/fieldError.js","controllers/changeField.js","controllers/changeEmail.js","controllers/fieldCheckbox.js","controllers/fieldCheckboxList.js","controllers/fieldRadio.js","controllers/fieldNumber.js","controllers/mirrorField.js","controllers/confirmField.js","controllers/updateFieldModel.js","controllers/submitButton.js","controllers/submitDebug.js","controllers/getFormErrors.js","controllers/validateRequired.js","controllers/submitError.js","controllers/actionRedirect.js","controllers/actionSuccess.js","controllers/fieldSelect.js","controllers/coreSubmitResponse.js","controllers/fieldProduct.js","controllers/fieldTotal.js","controllers/fieldQuantity.js","models/calcModel.js","models/calcCollection.js","controllers/calculations.js","controllers/fieldDate.js","controllers/fieldRecaptcha.js","controllers/helpText.js","controllers/fieldTextareaRTE.js","controllers/fieldStarRating.js","controllers/fieldTerms.js","controllers/formContentFilters.js","views/fieldItem.js","views/beforeField.js","views/fieldErrorItem.js","views/fieldErrorCollection.js","views/inputLimit.js","views/afterField.js","views/fieldLayout.js","controllers/loadViews.js","controllers/formErrors.js","controllers/submit.js","views/fieldCollection.js","controllers/defaultFilters.js","controllers/loadControllers.js","views/beforeForm.js","views/formErrorItem.js","views/formErrorCollection.js","views/honeyPot.js","views/afterFormContent.js","views/beforeFormContent.js","views/formLayout.js","views/afterForm.js","views/mainLayout.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","model","Backbone","Model","extend","errorModel","collection","Collection","fieldErrorCollection","defaults","placeholder","label_pos","classes","reRender","mirror_field","confirm_field","clean","disabled","visible","initialize","this","set","options","formModel","get","listenTo","nfRadio","channel","resetModel","bind","changeModel","changeValue","trigger","formLoaded","beforeSubmit","addWrapperClass","cl","removeWrapperClass","fieldModel","comparator","models","validateFields","_","each","showFields","invoke","hideFields","FieldCollection","ErrorCollection","beforeForm","afterForm","beforeFields","afterFields","wrapper_class","element_class","hp","fieldErrors","extra","setting","formContentData","formContentLoadFilters","request","sortedArray","without","first","reply","getFieldByKey","addError","removeError","getExtra","addExtra","removeExtra","getForm","key","findWhere","msg","errors","add","remove","extraData","FormModel","FormCollection","controller","Marionette","nfForms","getForms","getField","form","fieldErrorModel","getError","targetID","targetError","changeField","blurField","el","val","radioChannel","emailReg","errorID","onChangeModelValue","emailKeyup","onBlurField","fieldID","emailChange","changeEmailErrorMsg","keyCode","registerRenderClasses","validateRequired","validateModelData","beforeUpdateField","getCalcValue","checked","attr","addClass","closest","find","removeClass","calcValue","customClasses","customLabelClasses","maybeChecked","default_value","register","renderOptions","renderOtherText","selected","filter","opt","html","valueFound","option","isSelected","testValues","toString","template","show_other","data","currentValue","calc_value","tmp_opt","math","calc","parent","clone","changeModelValue","updateCheckedClass","maybeMinDefault","validateMinMax","min","$el","parseFloat","max","step","fieldNumberNumMinError","fieldNumberNumMaxError","testValue","parseInt","testStep","fieldNumberIncrementBy","listeningModel","registerMirror","targetModel","registerConfirm","confirmKeyup","confirmModel","formModal","registerConfirmListeners","console","log","confirmID","confirmFieldErrorMsg","compareValue","confirmValue","updateField","isArray","submitButton","registerHandlers","click","resetLabel","maybeEnable","maybeDisable","processingLabel","size","response","submitDebug","textStatus","jqXHR","formID","debug","debugMessages","message","style","getFormErrors","error","field","validateKeyup","customReqValidation","defaultReqValidation","maskPlaceholder","trim","valid","maybeError","validateRequiredField","submitErrors","fields","show","actionRedirect","halt","redirect","window","location","actions","actionSubmit","success_message","form_id","animate","scrollTop","offset","top","renderOtherAttributes","label","otherAttributes","type","settings","clear_complete","reset","hide_complete","renderProductQuantity","renderProduct","product_type","product_use_quantity","that","product_price","product_quantity","totalModel","productTotals","registerShipping","onFormLoaded","onChangeProduct","onChangeQuantity","shippingModel","shippingCost","fieldModels","productFields","quantityFields","productID","product","productPrice","Number","updateTotal","productQuantity","newTotal","productField","quantity","toFixed","registerQuantity","on","changeCalc","targetCalcModel","CalcModel","getCalc","CalcCollection","calcs","displayFields","registerCalcs","nfFrontEnd","use_merge_tags","calculations","fieldType","initDisplayField","updateDisplayFields","init","calcCollection","calcModel","setupCalc","eq","eqValues","match","RegExp","updateCalcFields","replaceKey","eval","isNumeric","tag","reTag","calcTag","reCalcTag","replaceAllKeys","re","calcName","rounding","initDatepicker","view","dateObject","pikadayResponsive","format","outputFormat","pikadayOptions","yearRange","getYearRange","setDate","moment","yearRangeStart","yearRangeEnd","initRecaptcha","updateResponse","initHelpText","jBox","theme","content","initTextareaRTEs","clickExtra","meta_image_frame","currentContext","summernote","icons","align","alignCenter","alignJustify","alignLeft","alignRight","indent","outdent","bold","caret","close","code","eraser","italic","link","unlink","magic","minus","orderedlist","redo","square","table","underline","undo","unorderedlist","linkButton","context","mediaButton","toolbar","userSettings","uid","buttons","height","codemirror","lineNumbers","prettifyHtml","callbacks","onChange","linkMenu","next","replaceWith","class","innerHTML","ui","linkDropdown","buttonGroup","button","className","contents","tooltip","nfi18n","fieldTextareaRTEInsertLink","clickLinkButton","toggle","dropdown","children","render","fieldTextareaRTEInsertMedia","openMediaManager","open","wp","media","frames","title","fieldTextareaRTESelectAFile","text","media_attachment","state","toJSON","insertMedia","range","target","focus","textEl","urlEl","isNewWindowEl","hasClass","url","isNewWindow","filename","initRating","renderRatings","rating","default","num","keyUpExtra","currentTarget","addOption","new_option","viewFilters","loadFilters","addViewFilter","addLoadFilter","getViewFilters","getLoadFilters","priority","ItemView","tagName","onRender","unwrap","setElement","mask","isInteger","isFinite","Math","floor","templateHelpers","renderElement","tmpl","element_templates","renderLabel","renderLabelClasses","renderPlaceholder","customPlaceholder","renderWrapClass","wrapClass","old_classname","customWrapClass","renderClasses","maybeDisabled","disable_input","maybeDisableAutocomplete","disable_browser_autocomplete","maybeInputLimit","input_limit_type","input_limit","getHelpText","help_text","maybeRenderHelp","check_text","renderDescText","desc_text","currencySymbol","currency_symbol","events","change .nf-element","keyup .nf-element","click .nf-element","click .extra","blur .nf-element","fieldChange","fieldKeyup","fieldClick","extraClick","fieldBlur","fieldErrorItem","CollectionView","childView","updateCount","count","regex","words","wordCount","charCount","limit","currentCount","InputLimitView","changeError","errorEl","errorCollectionView","inputLimitEl","inputLimitView","fieldItem","beforeField","afterField","LayoutView","regions","getTemplate","renderContainerClass","containerClass","desc_pos","container_class","fieldItemView","fieldLayoutView","getFieldItem","getFieldLayout","errorMsg","formErrorsCorrectErrors","omit","registerSubmitHandler","submit","fieldDataDefaults","formData","JSON","stringify","action","security","ajaxNonce","ajax","adminAjax","cache","success","parseJSON","errorThrown","responseText","fieldLayout","FieldCollectionView","registerDefaultDataFilter","defaultFormContentLoad","defaultFormContentView","fieldCollection","currentFieldCollection","resetFields","FormData","FieldError","ChangeField","ChangeEmail","FieldCheckbox","FieldCheckboxList","FieldRadio","FieldNumber","MirrorField","ConfirmField","UpdateFieldModel","SubmitButton","SubmitDebug","GetFormErrors","ValidateRequired","SubmitError","ActionRedirect","ActionSuccess","FieldSelect","CoreSubmitResponse","FieldProduct","FieldTotal","FieldQuantity","Calculations","FieldDate","FieldRecaptcha","HelpText","FieldTextareaRTE","FieldStarRating","FieldTerms","FormContentFilters","LoadViews","FormErrors","Submit","DefaultFilters","formErrorItem","keyup .nf-field-hp","change .nf-field-hp","honeypotHoneypotError","HoneyPot","onShow","renderFieldsMarkedRequired","requiredFields","required","fieldsMarkedRequired","AfterFormContent","BeforeFormContent","beforeFormContent","formContent","afterFormContent","getEl","hide","formContentViewFilters","formContentView","BeforeForm","FormLayout","AfterForm","responseMsg","formLayout","document","ready","$","formCollection","LoadControllers","mainLayout","NinjaForms","Application","forms","Renderer","urlParameters","object","compact","search","item","nf_resume","restart","onStart","layoutView","evaluate","interpolate","escape","variable","ninjaForms","start"],"mappings":"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","file":"front-end.js","sourcesContent":["(function () {\n","/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","define( 'models/fieldErrorModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","define( 'models/fieldErrorCollection',['models/fieldErrorModel'], function( errorModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: errorModel\n\t} );\n\treturn collection;\n} );\n","define( 'models/fieldModel',['models/fieldErrorCollection'], function( fieldErrorCollection ) {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tplaceholder: '',\n\t\t\tvalue: '',\n\t\t\tlabel_pos: '',\n\t\t\tclasses: 'ninja-forms-field',\n\t\t\treRender: false,\n\t\t\tmirror_field: false,\n\t\t\tconfirm_field: false,\n\t\t\tclean: true,\n\t\t\tdisabled: '',\n\t\t\tvisible: true\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.set( 'formID', this.collection.options.formModel.get( 'id' ) );\n\t\t\tthis.listenTo( nfRadio.channel( 'form-' + this.get( 'formID' ) ), 'reset', this.resetModel );\n\n    \t\tthis.bind( 'change', this.changeModel, this );\n    \t\tthis.bind( 'change:value', this.changeValue, this );\n    \t\tthis.set( 'errors', new fieldErrorCollection() );\n\n    \t\t/*\n\t\t\t * Trigger an init event on two channels:\n\t\t\t * \n\t\t\t * fields\n\t\t\t * field-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'init:model', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'init:model', this );\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'init:model', this );\n\n\t\t\tif( 'undefined' != this.get( 'parentType' ) ){\n\t\t\t\tnfRadio.channel( this.get( 'parentType' ) ).trigger( 'init:model', this );\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * When we load our form, fire another event for this field.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'form-' + this.get( 'formID' ) ), 'loaded', this.formLoaded );\n\t\t\n\t\t\t/*\n\t\t\t * Before we submit our form, send out a message so that this field can be modified if necessary.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'form-' + this.get( 'formID' ) ), 'before:submit', this.beforeSubmit );\n\t\t},\n\n\t\tchangeModel: function() {\n\t\t\tnfRadio.channel( 'field-' + this.get( 'id' ) ).trigger( 'change:model', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'change:model', this );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:model', this );\n\t\t},\n\n\t\tchangeValue: function() {\n\t\t\tnfRadio.channel( 'field-' + this.get( 'id' ) ).trigger( 'change:modelValue', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'change:modelValue', this );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:modelValue', this );\n\t\t},\n\n\t\taddWrapperClass: function( cl ) {\n\t\t\tthis.set( 'addWrapperClass', cl );\n\t\t},\n\n\t\tremoveWrapperClass: function( cl ) {\n\t\t\tthis.set( 'removeWrapperClass', cl );\n\t\t},\n\n\t\tformLoaded: function() {\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'formLoaded', this );\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'formLoaded', this );\n\t\t},\n\n\t\tbeforeSubmit: function( formModel ) {\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'before:submit', this );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'before:submit', this );\n\t\t}\n\n\t} );\n\n\treturn model;\n} );\n\n","define( 'models/fieldCollection',['models/fieldModel'], function( fieldModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: fieldModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options;\n\t\t},\n\n\t\tvalidateFields: function() {\n\t\t\t_.each( this.models, function( fieldModel ) {\n\t\t\t\tnfRadio.channel( 'submit' ).trigger( 'validate:field', fieldModel );\n\t\t\t}, this );\n\t\t},\n\n\t\tshowFields: function() {\n\t\t\tthis.invoke( 'set', { visible: true } );\n\t\t},\n\n\t\thideFields: function() {\n\t\t\tthis.invoke( 'set', { visible: false } );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","define( 'models/formErrorModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","define( 'models/formErrorCollection',['models/formErrorModel'], function( errorModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: errorModel\n\t} );\n\treturn collection;\n} );\n","define( 'models/formModel',[\n\t'models/fieldCollection',\n\t'models/formErrorCollection'\n\t], function(\n\t\tFieldCollection,\n\t\tErrorCollection\n\t) {\n\tvar model = Backbone.Model.extend({\n\t\tdefaults: {\n\t\t\tbeforeForm: '',\n\t\t\tafterForm: '',\n\t\t\tbeforeFields: '',\n\t\t\tafterFields: '',\n\t\t\twrapper_class: '',\n\t\t\telement_class: '',\n\t\t\thp: '',\n\t\t\tfieldErrors: {},\n\t\t\textra: {}\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Loop over settings and map to attributes\n\t\t\t_.each( this.get( 'settings' ), function( value, setting ) {\n\t\t\t\tthis.set( setting, value );\n\t\t\t}, this );\n\n\t\t\tthis.set( 'loadedFields', this.get( 'fields' ) );\n\t\t\tthis.set( 'fields', new FieldCollection( this.get( 'fields' ), { formModel: this } ) );\n\t\t\tthis.set( 'errors', new ErrorCollection() );\n\n\t\t\t/*\n\t\t\t * Send out a radio message so that anyone who wants to filter our content data can register their filters.\n\t\t\t */\n\t\t\tnfRadio.channel( 'form' ).trigger( 'before:filterData', this );\n\n\t\t\t/*\n\t\t\t * Set our formContentData to our form setting 'formContentData'\n\t\t\t */\n\t\t\tvar formContentData = this.get( 'formContentData' );\n\n\t\t\t/*\n\t\t\t * The formContentData variable used to be fieldContentsData.\n\t\t\t * If we don't have a 'formContentData' setting, check to see if we have an old 'fieldContentsData'.\n\t\t\t * \n\t\t\t * TODO: This is for backwards compatibility and should be removed eventually. \n\t\t\t */\n\t\t\tif ( ! formContentData ) {\n\t\t\t\tformContentData = this.get( 'fieldContentsData' );\n\t\t\t}\n\t\t\t\n\t\t\tvar formContentLoadFilters = nfRadio.channel( 'formContent' ).request( 'get:loadFilters' );\n\t\t\t/* \n\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t*/\n\t\t\tvar sortedArray = _.without( formContentLoadFilters, undefined );\n\t\t\tvar callback = _.first( sortedArray );\n\t\t\tformContentData = callback( formContentData, this, this );\n\t\t\t\n\t\t\tthis.set( 'formContentData', formContentData );\n\n\t\t\tnfRadio.channel( 'forms' ).trigger( 'init:model', this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'init:model', this );\n\n\t\t\t// Fields\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'get:fieldByKey', this.getFieldByKey, this );\n\n\t\t\t// Form Errors\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'add:error',    this.addError, this    );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'remove:error', this.removeError, this );\n\n\t\t\t// Extra Data\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'get:extra',    this.getExtra,    this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'add:extra',    this.addExtra,    this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'remove:extra', this.removeExtra, this );\n\t\t\n\t\t\t// Respond to requests to get this model.\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).reply( 'get:form', \t this.getForm, \t   this );\n\n\t\t\tnfRadio.channel( 'form' ).trigger( 'loaded', this );\n\t\t\tnfRadio.channel( 'form' ).trigger( 'after:loaded', this );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'loaded', \t this );\n\t\t},\n\n\t\t/*\n\t\t |--------------------------------------------------------------------------\n\t\t | Fields\n\t\t |--------------------------------------------------------------------------\n\t\t */\n\n\t\tgetFieldByKey: function( key ) {\n\t\t\treturn this.get( 'fields' ).findWhere( { key: key } );\n\t\t},\n\n\t\t/*\n\t\t |--------------------------------------------------------------------------\n\t\t | Form Errors\n\t\t |--------------------------------------------------------------------------\n\t\t */\n\n\t\taddError: function( id, msg ) {\n\t\t\tvar errors = this.get( 'errors' );\n\t\t\terrors.add( { id: id, msg: msg } );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'add:error', this, id, msg );\n\t\t},\n\n\t\tremoveError: function( id ) {\n\t\t\tvar errors = this.get( 'errors' );\n\t\t\tvar errorModel = errors.get( id );\n\t\t\terrors.remove( errorModel );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'remove:error', this, id );\n\t\t},\n\n\t\t/*\n\t\t |--------------------------------------------------------------------------\n\t\t | Extra Data\n\t\t |--------------------------------------------------------------------------\n\t\t */\n\n\t\tgetExtra: function( key ) {\n\t\t\tvar extraData = this.get( 'extra' );\n\t\t\tif( 'undefined' == typeof key ) return extraData;\n\t\t\treturn extraData[ key ];\n\t\t},\n\n\t\taddExtra: function( key, value ) {\n\t\t\tvar extraData = this.get( 'extra' );\n\t\t\textraData[ key ] = value;\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'add:extra', this, key, value );\n\t\t},\n\n\t\tremoveExtra: function( key ) {\n\t\t\tvar extraData = this.get( 'extra' );\n\t\t\tdelete extraData[ key ];\n\t\t\tnfRadio.channel( 'form-' + this.get( 'id' ) ).trigger( 'remove:extra', this, key );\n\t\t},\n\n\t\t/*\n\t\t |--------------------------------------------------------------------------\n\t\t | Get this form\n\t\t |--------------------------------------------------------------------------\n\t\t */\n\t\tgetForm: function() {\n\t\t\treturn this;\n\t\t}\n\t} );\n\n\treturn model;\n} );\n","define( 'models/formCollection',['models/formModel'], function( formModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: formModel\n\t} );\n\treturn collection;\n} );\n","/*\n * Handles setting up our form.\n *\n * Holds a collection of our fields.\n * Replies to requests for field data.\n * Updates field models.\n */\ndefine('controllers/formData',['models/formModel', 'models/formCollection', 'models/fieldCollection', 'models/formErrorCollection'], function( FormModel, FormCollection, FieldCollection, ErrorCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\n\t\t\t/*\n\t\t\t * Setup our field collections.\n\t\t\t */\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Initialize our form collection (incase we have multiple forms on the page)\n\t\t\t */\n\t\t\tthis.collection = new FormCollection( nfForms );\n\n\t\t\tnfRadio.channel( 'forms' ).trigger( 'loaded', this.collection );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'forms:loaded', this.collection );\n\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:form', this.getForm, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:forms', this.getForms, this );\n\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:field', this.getField, this );\n\t\t},\n\n\t\tgetForm: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t},\n\n\t\tgetForms: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetField: function( id ) {\n\t\t\tvar model = false;\n\t\t\t\n\t\t\t_.each( this.collection.models, function( form ) {\n\t\t\t\tif ( ! model ) {\n\t\t\t\t\tmodel = form.get( 'fields' ).get( id );\t\n\t\t\t\t}\t\t\t\n\t\t\t} );\n\t\t\treturn model;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldError',['models/fieldErrorModel'], function( fieldErrorModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fields' ).reply( 'add:error', this.addError );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'remove:error', this.removeError );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:error', this.getError );\n\t\t},\n\n\t\taddError: function( targetID, id, msg ) {\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\n\n\t\t\tif( 'undefined' == typeof model ) return;\n\n\t\t\tvar errors = model.get( 'errors' );\n\t\t\terrors.add( { 'id': id, 'msg' : msg } );\n\t\t\tmodel.set( 'errors', errors );\n\t\t\tmodel.trigger( 'change:errors', model );\n\t\t\tmodel.set( 'clean', false );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'add:error', model, id, msg );\n\t\t},\n\n\t\tremoveError: function( targetID, id ) {\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\n\n\t\t\tif( 'undefined' == typeof model ) return;\n\n\t\t\tvar errors = model.get( 'errors' );\n\t\t\tvar targetError = errors.get( id );\n\t\t\tif ( 'undefined' != typeof targetError ) {\n\t\t\t\terrors.remove( targetError );\n\t\t\t\tmodel.set( 'errors', errors );\n\t\t\t\tmodel.trigger( 'change:errors', model );\n\t\t\t\tnfRadio.channel( 'fields' ).trigger( 'remove:error', model, id );\n\t\t\t}\n\t\t},\n\n\t\tgetError: function( targetID, id ) {\n\t\t\tvar model = nfRadio.channel( 'fields' ).request( 'get:field', targetID );\n\t\t\tvar errors = model.get( 'errors' );\n\t\t\tvar targetError = errors.get( id );\n\t\t\tif ( 'undefined' != targetError ) {\n\t\t\t\treturn targetError;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Controller responsible for replying to a Radio request stating that a field has been changed.\n *\n * This controller sends out a message to the field-specific channel, the field type channel,\n * and the public fields channel so that the data model can be updated.\n */\n\ndefine('controllers/changeField',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Reply to our request for changing a field.\n\t\t\t */\n\t\t\tnfRadio.channel( 'nfAdmin' ).reply( 'change:field', this.changeField );\n\n\t\t\t/*\n\t\t\t * If we blur our field, set the model attribute of 'clean' to false.\n\t\t\t * 'clean' tracks whether or not the user has every interacted with this element.\n\t\t\t * Some validation, like required, uses this to decide whether or not to add an error.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'blur:field', this.blurField );\n\t\t},\n\n\t\tchangeField: function( el, model ) {\n\t\t\t// Get our current value.\n\t\t\tvar value = nfRadio.channel( model.get( 'type' ) ).request( 'before:updateField', el, model );\n\t\t\tvalue = ( 'undefined' != typeof value ) ? value : nfRadio.channel( model.get( 'parentType' ) ).request( 'before:updateField', el, model );\n\t\t\tvalue = ( 'undefined' != typeof value ) ? value : jQuery( el ).val();\n\n\t\t\t// Set our 'isUpdated' flag to false.\n\t\t\tmodel.set( 'isUpdated', false );\n\n\t\t\t// Set our 'clean' flag to false.\n\t\t\tmodel.set( 'clean', false );\n\n\t\t\t/*\n\t\t\t * Send out a message saying that we've changed a field.\n\t\t\t * The first channel is field id/key specific.\n\t\t\t * The second channel is the field type, i.e. text, email, radio\n\t\t\t * The third channel is a generic 'field' channel.\n\t\t\t *\n\t\t\t * If the submitted value you wish to store in the data model isn't the same as the value received above,\n\t\t\t * you can set that model in the actions below and set the 'isUpdated' model attribute to true.\n\t\t\t * i.e. model.set( 'isUpdated', true );\n\t\t\t */\n\t\t\tnfRadio.channel( 'field-' + model.get( 'id' ) ).trigger( 'change:field', el, model );\n\t\t\tnfRadio.channel( model.get( 'type' ) ).trigger( 'change:field', el, model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'change:field', el, model );\n\n\t\t\t/*\n\t\t\t * Send a request out on our nfAdmin channel to update our field model.\n\t\t\t * If the field model has a 'isUpdated' property of false, nothing will be updated.\n\t\t\t */\n\t\t\tnfRadio.channel( 'nfAdmin' ).request( 'update:field', model, value );\n\t\t},\n\n\t\tblurField: function( el, model ) {\n\t\t\t// Set our 'clean' flag to false.\n\t\t\tmodel.set( 'clean', false );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/changeEmail',[], function() {\n\tvar radioChannel = nfRadio.channel( 'email' );\n\t// var emailReg = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n\tvar emailReg = /^([\\w-+]+(?:\\.[\\w-+]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n\tvar errorID = 'invalid-email';\n\n\tvar controller = Marionette.Object.extend( {\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'change:modelValue', this.onChangeModelValue );\n\t\t\tthis.listenTo( radioChannel, 'keyup:field', this.emailKeyup );\n\t\t\tthis.listenTo( radioChannel, 'blur:field', this.onBlurField );\n\t\t},\n\n\t\tonChangeModelValue: function( model ) {\n\t\t\tvar value = model.get( 'value' );\n\t\t\tvar fieldID = model.get( 'id' );\n\t\t\tthis.emailChange( value, fieldID );\n\t\t},\n\n\t\tonBlurField: function( el, model ) {\n\t\t\tvar value = jQuery( el ).val();\n\t\t\tvar fieldID = model.get( 'id' );\n\t\t\tthis.emailChange( value, fieldID );\n\t\t},\n\n\t\temailChange: function( value, fieldID ) {\n\t\t\tif ( 0 < value.length ) {\n\t\t\t\tif( emailReg.test( value ) ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t\t} else {\n\t\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', fieldID );\n\t\t\t\t\tvar formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', fieldID, errorID, formModel.get( 'settings' ).changeEmailErrorMsg );\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When a user types inside of an email field, track their keypresses and add the appropriate class.\n\t\t * If the value validates as an email, add a class of nf-pass\n\t\t * If the value does not validate as email, add a class of nf-fail\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  {object} el    Element that triggered the keyup event.\n\t\t * @param  {object} model Model connected to the element that triggered the event\n\t\t * @return {void}\n\t\t */\n\t\temailKeyup: function( el, model, keyCode ) {\n\t\t\t\n\t\t\t/*\n\t\t\t * If we pressed the 'tab' key to get to this field, return false.\n\t\t\t */\n\t\t\tif ( 9 == keyCode ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t/*\n\t\t\t * Get the current value from our element.\n\t\t\t */\n\t\t\tvar value = jQuery( el ).val();\n\n\t\t\t/*\n\t\t\t * Get our current ID\n\t\t\t */\n\t\t\tvar fieldID = model.get( 'id' );\n\n\t\t\t/*\n\t\t\t * Check our value to see if it is a valid email.\n\t\t\t */\n\t\t\n\t\t\t\n\t\t\tif ( 0 == value.length ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t} else if ( ! emailReg.test( value ) && ! model.get( 'clean' ) ) {\n\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', fieldID );\n\t\t\t\tvar formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', fieldID, errorID, formModel.get( 'settings' ).changeEmailErrorMsg );\n\n\t\t\t\tmodel.removeWrapperClass( 'nf-pass' );\n\t\t\t} else if ( emailReg.test( value ) ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', fieldID, errorID );\n\t\t\t\t/*\n\t\t\t\t * Add nf-pass class to the wrapper.\n\t\t\t\t */\n\t\t\t\tmodel.addWrapperClass( 'nf-pass' );\n\t\t\t\tmodel.set( 'clean', false );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldCheckbox',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * When we init our checkbox model, register our renderClasses() function\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'checkbox' ), 'init:model', this.registerRenderClasses );\n\n\t\t\tnfRadio.channel( 'checkbox' ).reply( 'validate:required', this.validateRequired );\n\t\t\tnfRadio.channel( 'checkbox' ).reply( 'validate:modelData', this.validateModelData );\n            nfRadio.channel( 'checkbox' ).reply( 'before:updateField', this.beforeUpdateField, this );\n            nfRadio.channel( 'checkbox' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t},\n\n\t\tbeforeUpdateField: function( el, model ) {\n\t\t\tvar checked = jQuery( el ).attr( 'checked' );\n\t\t\tif ( checked ) {\n\t\t\t\tvar value = 1;\n\t\t\t\tjQuery( el ).addClass( 'nf-checked' );\n\t\t\t\tjQuery( el ).closest( '.field-wrap' ).find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).addClass( 'nf-checked-label' );\n\t\t\t} else {\n\t\t\t\tvar value = 0;\n\t\t\t\tjQuery( el ).removeClass( 'nf-checked' );\n\t\t\t\tjQuery( el ).closest( '.field-wrap' ).find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).removeClass( 'nf-checked-label' );\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\n\t\tvalidateRequired: function( el, model ) {\n\t\t\treturn el[0].checked;\n\t\t},\n\n\t\tvalidateModelData: function( model ) {\n\t\t\treturn model.get( 'value' ) != 0;\n\t\t},\n\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\tif ( 1 == fieldModel.get( 'value' ) ) {\n\t\t\t\tcalcValue = fieldModel.get( 'checked_calc_value' );\n\t\t\t} else {\n\t\t\t\tcalcValue = fieldModel.get( 'unchecked_calc_value' );\n\t\t\t}\n\n\t\t\treturn calcValue;\n\t\t},\n\n\t\tregisterRenderClasses: function( model ) {\n\t\t\tif ( 'checked' == model.get( 'default_value' ) ) {\n\t\t\t\tmodel.set( 'value', 1 );\n\t\t\t} else {\n\t\t\t\tmodel.set( 'value', 0 );\n\t\t\t}\n\t\t\tmodel.set( 'customClasses', this.customClasses );\n\t\t\tmodel.set( 'customLabelClasses', this.customLabelClasses );\n\t\t\tmodel.set( 'maybeChecked', this.maybeChecked );\n\t\t},\n\n\t\tcustomClasses: function( classes ) {\n\t\t\tif ( 1 == this.value || ( this.clean && 'undefined' != typeof this.default_value && 'checked' == this.default_value ) ) {\n\t\t\t\tclasses += ' nf-checked';\n\t\t\t} else {\n\t\t\t\tclasses.replace( 'nf-checked', '' );\n\t\t\t}\n\t\t\treturn classes;\n\t\t},\n\n\t\tcustomLabelClasses: function( classes ) {\n\t\t\tif ( 1 == this.value || ( this.clean && 'undefined' != typeof this.default_value && 'checked' == this.default_value ) ) {\n\t\t\t\tclasses += ' nf-checked-label';\n\t\t\t} else {\n\t\t\t\tclasses.replace( 'nf-checked-label', '' );\n\t\t\t}\n\t\t\treturn classes;\n\t\t},\n\n\t\tmaybeChecked: function() {\n\t\t\tif ( 1 == this.value || ( this.clean && 'undefined' != typeof this.default_value && 'checked' == this.default_value ) ) {\n\t\t\t\treturn ' checked';\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldCheckboxList',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'listcheckbox' ), 'init:model', this.register );\n            this.listenTo( nfRadio.channel( 'terms' ), 'init:model', this.register );\n            nfRadio.channel( 'listcheckbox' ).reply( 'before:updateField', this.beforeUpdateField, this );\n            nfRadio.channel( 'terms' ).reply( 'before:updateField', this.beforeUpdateField, this );\n            nfRadio.channel( 'listcheckbox' ).reply( 'get:calcValue', this.getCalcValue, this );\n            nfRadio.channel( 'terms' ).reply( 'get:calcValue', this.getCalcValue, this );\n        },\n\n        register: function( model ) {\n            model.set( 'renderOptions', this.renderOptions );\n            model.set( 'renderOtherText', this.renderOtherText );\n            model.set( 'selected', [] );\n\n            /*\n             * When we init a model, we need to set our 'value' to the selected option's value.\n             * This is the list equivalent of a 'default value'.\n             */ \n            if ( 0 != model.get( 'options' ).length ) {\n                var selected = _.filter( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n                selected = _.map( selected, function( opt ) { return opt.value } );\n                model.set( 'value', selected );\n            }\n\n        },\n\n        renderOptions: function() {\n            var html = '';\n\n            if ( '' == this.value ) {\n                var valueFound = true;\n            } else {\n                var valueFound = false;\n            }\n\n            _.each( this.options, function( option, index ) {\n                if ( option.value == this.value ) {\n                    valueFound = true;\n                }\n\n                /*\n                 * TODO: This is a bandaid fix for making sure that each option has a \"visible\" property.\n                 * This should be moved to creation so that when an option is added, it has a visible property by default.\n                 */\n                if ( 'undefined' == typeof option.visible ) {\n                    option.visible = true;\n                }\n\n                option.fieldID = this.id;\n                option.classes = this.classes;\n                option.index = index;\n\n                if( ( option.selected && \"0\" != option.selected ) && this.clean ){\n                    option.isSelected = true;\n                } else {\n                    var testValues = _.map( this.value, function( value ) {\n                        return value.toString();\n                    } );               \n                    \n                    option.isSelected = ( -1 != testValues.indexOf( option.value.toString() ) );\n                }\n\n                var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listcheckbox-option' );\n                html += template( option );\n            }, this );\n\n            if ( 1 == this.show_other ) {\n                if ( 'nf-other' == this.value ) {\n                    valueFound = false;\n                }\n                var data = {\n                    fieldID: this.id,\n                    classes: this.classes,\n                    currentValue: this.value,\n                    renderOtherText: this.renderOtherText,\n                    valueFound: valueFound\n                };\n\n                var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listcheckbox-other' );\n                html += template( data );\n\n            }\n\n            return html;\n        },\n\n        renderOtherText: function() {\n            if ( 'nf-other' == this.currentValue || ! this.valueFound ) {\n                if ( 'nf-other' == this.currentValue ) {\n                    this.currentValue = '';\n                }\n                var data = {\n                    fieldID: this.fieldID,\n                    classes: this.classes,\n                    currentValue: this.currentValue\n                };\n                var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listcheckbox-other-text' );\n                return template( data );\n            }\n        },\n\n        getCalcValue: function( fieldModel ) {\n            var calc_value = 0;\n            var options = fieldModel.get( 'options' );\n            if ( 0 != options.length ) {\n                _.each( fieldModel.get( 'value' ), function( val ) {\n                    var tmp_opt = _.find( options, function( opt ) { return opt.value == val } );\n                    calc_value = math.add( calc_value, tmp_opt.calc );\n                } );\n            }\n            return calc_value;\n        },\n\n        beforeUpdateField: function( el, model ) {\n            var selected = model.get( 'value' ) || [];\n            if ( typeof selected == 'string' ) selected = [ selected ];\n\n            var value = jQuery( el ).val();\n            var checked = jQuery( el ).attr( 'checked' );\n            if ( checked ) {\n                selected.push( value );\n                jQuery( el ).addClass( 'nf-checked' );\n                jQuery( el ).parent().find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).addClass( 'nf-checked-label' );\n            } else {\n                jQuery( el ).removeClass( 'nf-checked' );\n                jQuery( el ).parent().find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).removeClass( 'nf-checked-label' );\n                var i = selected.indexOf( value );\n                if( -1 != i ){\n                    selected.splice( i, 1 );\n                }\n            }\n\n            // if ( 1 == model.get( 'show_other' ) ) {\n            //     model.set( 'reRender', true );\n            // }\n\n            return _.clone( selected );\n        }\n    });\n\n    return controller;\n} );\n","define('controllers/fieldRadio',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'change:modelValue', this.changeModelValue );\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'init:model', this.register );\n\t\t\tnfRadio.channel( 'listradio' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t\t\n\t\t\tthis.listenTo( nfRadio.channel( 'listradio' ), 'change:field', this.updateCheckedClass, this );\n\t\t},\n\n\t\tregister: function( model ) {\n\t\t\tmodel.set( 'renderOptions', this.renderOptions );\n\t\t\tmodel.set( 'renderOtherText', this.renderOtherText );\n\t\t\t/*\n\t\t\t * When we init a model, we need to set our 'value' to the selected option's value.\n\t\t\t * This is the list equivalent of a 'default value'.\n\t\t\t */ \n\t\t\tif ( 0 != model.get( 'options' ).length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have a selected value.\n\t\t\t\t */\n\t\t\t\tvar selected = _.find( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n\n\t\t\t\tif ( 'undefined' != typeof selected ) {\n\t\t\t\t\tmodel.set( 'value', selected.value );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tchangeModelValue: function( model ) {\n\t\t\tif ( 1 == model.get( 'show_other' ) ) {\n\t\t\t\t// model.set( 'reRender', true );\n\t\t\t\tmodel.trigger( 'reRender');\n\t\t\t}\n\t\t},\n\n\t\trenderOptions: function() {\n\t\t\tvar html = '';\n\t\t\tif ( '' == this.value ) {\n\t\t\t\tvar valueFound = true;\n\t\t\t} else {\n\t\t\t\tvar valueFound = false;\n\t\t\t}\n\t\t\t\n\t\t\t_.each( this.options, function( option, index ) {\n\t\t\t\tif ( option.value == this.value ) {\n\t\t\t\t\tvalueFound = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n                 * TODO: This is a bandaid fix for making sure that each option has a \"visible\" property.\n                 * This should be moved to creation so that when an option is added, it has a visible property by default.\n                 */\n                if ( 'undefined' == typeof option.visible ) {\n                    option.visible = true;\n                }\n\n                option.selected = false;\n\t\t\t\toption.fieldID = this.id;\n\t\t\t\toption.classes = this.classes;\n\t\t\t\toption.currentValue = this.value;\n\t\t\t\toption.index = index;\n\n\t\t\t\t/*\n\t\t\t\t * If we haven't edited this field yet, use the default checked\n\t\t\t\t */\n\t\t\t\tif ( this.clean && 1 == this.selected ) {\n\t\t\t\t\toption.selected = true;\n\t\t\t\t} else if ( this.value == option.value ) {\n\t\t\t\t\toption.selected = true;\n\t\t\t\t} else {\n\t\t\t\t\toption.selected = false;\n\t\t\t\t}\n\n\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listradio-option' );\n\n\t\t\t\thtml += template( option );\n\t\t\t}, this );\n\n\t\t\tif ( 1 == this.show_other ) {\n\t\t\t\tif ( 'nf-other' == this.value ) {\n\t\t\t\t\tvalueFound = false;\n\t\t\t\t}\n\t\t\t\tvar data = {\n\t\t\t\t\tfieldID: this.id,\n\t\t\t\t\tclasses: this.classes,\n\t\t\t\t\tcurrentValue: this.value,\n\t\t\t\t\trenderOtherText: this.renderOtherText,\n\t\t\t\t\tvalueFound: valueFound\n\t\t\t\t};\n\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listradio-other' );\n\t\t\t\thtml += template( data );\n\t\t\t}\n\n\t\t\treturn html;\n\t\t},\n\n\t\trenderOtherText: function() {\n\t\t\tif ( 'nf-other' == this.currentValue || ! this.valueFound ) {\n\t\t\t\tif ( 'nf-other' == this.currentValue ) {\n\t\t\t\t\tthis.currentValue = '';\n\t\t\t\t}\n\t\t\t\tvar data = {\n\t\t\t\t\tfieldID: this.fieldID,\n\t\t\t\t\tclasses: this.classes,\n\t\t\t\t\tcurrentValue: this.currentValue\n\t\t\t\t};\n\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listradio-other-text' );\n\t\t\t\treturn template( data );\n\t\t\t}\n\t\t},\n\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\tvar calc_value = 0;\n\t\t\tif ( 0 != fieldModel.get( 'options' ).length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have a selected value.\n\t\t\t\t */\n\t\t\t\tvar selected = _.find( fieldModel.get( 'options' ), function( opt ) { return fieldModel.get( 'value' ) == opt.value } );\n\t\t\t\t/*\n\t\t\t\t * We don't have a selected value, so use our first option.\n\t\t\t\t */\n\t\t\t\tif ( 'undefined' == typeof selected ) {\n\t\t\t\t\tselected = fieldModel.get( 'options' )[0];\n\t\t\t\t}\n\n\t\t\t\tvar calc_value = selected.calc;\n\t\t\t}\n\t\t\treturn calc_value;\n\t\t},\n\n\t\tupdateCheckedClass: function( el, model ) {\n\t\t\tjQuery( '[name=\"' + jQuery( el ).attr( 'name' ) + '\"]' ).removeClass( 'nf-checked' );\n\t\t\tjQuery( el ).closest( 'ul' ).find( 'label' ).removeClass( 'nf-checked-label' );\n\t\t\tjQuery( el ).addClass( 'nf-checked' );\n\t\t\tjQuery( el ).closest( 'li' ).find( 'label[for=\"' + jQuery( el ).prop( 'id' ) + '\"]' ).addClass( 'nf-checked-label' );\n\n\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldNumber',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'number' ), 'init:model', this.maybeMinDefault );\n            this.listenTo( nfRadio.channel( 'number' ), 'keyup:field', this.validateMinMax );\n        },\n\n        maybeMinDefault: function( model ) {\n\n            if( '' == model.get( 'value' ) ){\n                var min = model.get( 'num_min' );\n                model.set( 'value', min );\n            }\n        },\n\n        validateMinMax: function( el, model ) {\n            var $el = jQuery( el );\n            var value = parseFloat( $el.val() );\n            var min = $el.attr( 'min' );\n            var max = $el.attr( 'max' );\n            var step = parseFloat( $el.attr( 'step' ) );\n\n            if( min && value < min ){\n                var fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', model.get( 'id' ) );\n                var formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-min', formModel.get( 'settings' ).fieldNumberNumMinError );\n            } else {\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-min' );\n            }\n\n            if ( max && value > max ){\n                var fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', model.get( 'id' ) );\n                var formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-max', formModel.get( 'settings' ).fieldNumberNumMaxError );\n            } else {\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-max' );\n            }\n\n            var testValue = parseInt( value * 1000000000 );\n            var testStep = parseInt( step * 1000000000  );\n\n            if( value && 0 !== testValue % testStep ){\n                var fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', model.get( 'id' ) );\n                var formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\n                nfRadio.channel( 'fields' ).request( 'add:error', model.get( 'id' ), 'number-step', formModel.get( 'settings' ).fieldNumberIncrementBy + step );\n            } else {\n                nfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'number-step' );\n            }\n        }\n\n    });\n\n    return controller;\n} );\n","define( 'controllers/mirrorField',[], function() {\n\tvar radioChannel = nfRadio.channel( 'fields' );\n\n\tvar controller = Marionette.Object.extend( {\n\t\tlisteningModel: '',\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'init:model', this.registerMirror );\n\t\t},\n\n\t\tregisterMirror: function( model ) {\n\t\t\tif ( model.get( 'mirror_field' ) ) {\n\t\t\t\tthis.listeningModel = model;\n\t\t\t\tvar targetID = model.get( 'mirror_field' );\n\t\t\t\tthis.listenTo( nfRadio.channel( 'field-' + targetID ), 'change:modelValue', this.changeValue );\n\t\t\t}\n\t\t},\n\n\t\tchangeValue: function( targetModel ) {\n\t\t\tthis.listeningModel.set( 'value', targetModel.get( 'value' ) );\n\t\t\t// this.listeningModel.set( 'reRender', true );\n\t\t\tthis.listeningModel.trigger( 'reRender' );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define( 'controllers/confirmField',[], function() {\n\tvar radioChannel = nfRadio.channel( 'fields' );\n\tvar errorID = 'confirm-mismatch';\n\n\tvar controller = Marionette.Object.extend( {\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( radioChannel, 'init:model', this.registerConfirm );\n\t\t\tthis.listenTo( radioChannel, 'keyup:field', this.confirmKeyup );\n\t\t},\n\n\t\tregisterConfirm: function( confirmModel ) {\n\t\t\tif ( ! confirmModel.get( 'confirm_field' ) ) return;\n\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'loaded', function( formModal ){\n\t\t\t\tthis.registerConfirmListeners( confirmModel );\n\t\t\t});\n\t\t},\n\n\t\tregisterConfirmListeners: function( confirmModel ) {\n\t\t\t\n\t\t\tvar targetModel = nfRadio.channel( 'form-' + confirmModel.get( 'formID' ) ).request( 'get:fieldByKey', confirmModel.get( 'confirm_field' ) );\n\n\t\t\tconsole.log( targetModel );\n\n\t\t\ttargetModel.set( 'confirm_with', confirmModel.get( 'id' ) );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'field-' + targetModel.get( 'id' ) ), 'change:modelValue', this.changeValue );\n\t\t\tthis.listenTo( nfRadio.channel( 'field-' + confirmModel.get( 'id' ) ), 'change:modelValue', this.changeValue );\n\t\t},\n\n\t\tchangeValue: function( model ) {\n\t\t\tif ( 'undefined' == typeof model.get( 'confirm_with' ) ) {\n\t\t\t\tvar confirmModel = model;\n\t\t\t\tvar targetModel = nfRadio.channel( 'form-' + model.get( 'formID' ) ).request( 'get:fieldByKey', confirmModel.get( 'confirm_field' ) );\n\t\t\t} else {\n\t\t\t\tvar targetModel = model;\n\t\t\t\tvar confirmModel = radioChannel.request( 'get:field', targetModel.get( 'confirm_with' ) );\n\t\t\t}\n\t\t\tvar targetID = targetModel.get( 'id' );\n\t\t\tvar confirmID = confirmModel.get( 'id' );\n\n\t\t\tif ( '' == confirmModel.get( 'value' ) || confirmModel.get( 'value' ) == targetModel.get( 'value' ) ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\n\t\t\t} else {\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', confirmID );\n\t\t\t\tvar formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', confirmID, errorID, formModel.get( 'settings' ).confirmFieldErrorMsg );\n\t\t\t}\n\t\t},\n\t\t\n\t\tconfirmKeyup: function( el, model, keyCode ) {\n\n\t\t\tvar currentValue = jQuery( el ).val();\n\t\t\tif ( model.get( 'confirm_field' ) ) {\n\t\t\t\tvar confirmModel = model;\n\t\t\t\tvar confirmID = model.get( 'id' );\n\t\t\t\tvar targetModel = nfRadio.channel( 'form-' + model.get( 'formID' ) ).request( 'get:fieldByKey', confirmModel.get( 'confirm_field' ) );\n\t\t\t\tvar compareValue = targetModel.get( 'value' );\n\t\t\t\tvar confirmValue = currentValue;\n\t\t\t} else if ( model.get( 'confirm_with' ) ) {\n\t\t\t\tvar confirmModel = nfRadio.channel( 'fields' ).request( 'get:field', model.get( 'confirm_with' ) );\n\t\t\t\tvar confirmID = confirmModel.get( 'id' );\n\t\t\t\tvar confirmValue = confirmModel.get( 'value' );\n\t\t\t\tvar compareValue = confirmValue;\n\t\t\t}\n\n\t\t\tif ( 'undefined' !== typeof confirmModel ) {\n\t\t\t\tif ( '' == confirmValue ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\n\t\t\t\t} else if ( currentValue == compareValue ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', confirmID, errorID );\n\t\t\t\t} else {\n\t\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', confirmID );\n\t\t\t\t\tvar formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  fieldModel.get( 'formID' ) );\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', confirmID, errorID, formModel.get( 'settings' ).confirmFieldErrorMsg );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/updateFieldModel',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'nfAdmin' ).reply( 'update:field', this.updateField );\n\t\t},\n\n\t\tupdateField: function( model, value ) {\n\t\t\tif ( ! model.get( 'isUpdated' ) ) {\n\t\t\t\tmodel.set( 'value', value );\n\t\t\t\tmodel.set( 'isUpdated', true );\n\t\t\t\t/*\n\t\t\t\t * If we're working with an array, it won't trigger a change event on the value attribute.\n\t\t\t\t * Instead, we have to manually trigger a change event.\n\t\t\t\t */ \n\t\t\t\tif ( _.isArray( value ) ) {\n\t\t\t\t\tmodel.trigger( 'change:value', model );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/submitButton',['controllers/submitButton'], function( submitButton ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'submit' ), 'init:model', this.registerHandlers );\n\t\t},\n\n\t\tregisterHandlers: function( fieldModel ) {\n\t\t\tthis.listenTo( nfRadio.channel( 'field-' + fieldModel.get( 'id' ) ), 'click:field', this.click, this );\n\t\t\t/*\n\t\t\t * Register an interest in the 'before:submit' event of our form.\n\t\t\t */\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'before:submit', this.beforeSubmit, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'submit:failed', this.resetLabel, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'submit:response', this.resetLabel, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'enable:submit', this.maybeEnable, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'disable:submit', this.maybeDisable, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ), 'processingLabel', this.processingLabel, fieldModel );\n\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'fields' ), 'add:error', this.maybeDisable, fieldModel );\n\t\t\tfieldModel.listenTo( nfRadio.channel( 'fields' ), 'remove:error', this.maybeEnable, fieldModel );\n\t\t},\n\n\t\tclick: function( e, fieldModel ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', fieldModel.get( 'formID' ) );\n\t\t\tnfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ).request( 'submit', formModel );\n\t\t},\n\n\t\tbeforeSubmit: function() {\n\t\t\tthis.set( 'disabled', true );\n\t\t\tnfRadio.channel( 'form-' + this.get( 'formID' ) ).trigger( 'processingLabel', this );\n\t\t},\n\n\t\tmaybeDisable: function( fieldModel ) {\n\n\t\t\tif( fieldModel.get( 'formID' ) != this.get( 'formID' ) ) return;\n\n\t\t\tthis.set( 'disabled', true );\n\t\t\tthis.trigger( 'reRender' );\n\t\t},\n\n\t\tmaybeEnable: function( fieldModel ) {\n\t\t\t/*\n\t\t\t * If the field reporting the error is not on the same form as the submit button, return false;\n\t\t\t */\n\t\t\tif ( 'undefined' != typeof fieldModel && fieldModel.get( 'formID' ) != this.get( 'formID' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', this.get( 'formID' ) );\n\t\t\tif ( 0 == _.size( formModel.get( 'fieldErrors' ) ) ) {\n\t\t\t\tthis.set( 'disabled', false );\n\t\t\t\tthis.trigger( 'reRender' );\n\t\t\t}\n\t\t},\n\n\t\tprocessingLabel: function() {\n\t\t\tthis.set( 'oldLabel', this.get( 'label' ) );\n\t\t\tthis.set( 'label', this.get( 'processing_label' ) );\n\t\t\tthis.trigger( 'reRender' );\n\t\t},\n\n\t\tresetLabel: function( response ) {\n\t\t\tif ( 'undefined' != typeof this.get( 'oldLabel' ) ) {\n\t\t\t\tthis.set( 'label', this.get( 'oldLabel' ) );\n\t\t\t}\n\t\t\tthis.set( 'disabled', false );\n\t\t\tthis.trigger( 'reRender' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/submitDebug',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.submitDebug );\n        },\n\n        submitDebug: function( response, textStatus, jqXHR, formID ) {\n\n            if( 'undefined' == typeof response.debug ) return;\n\n            /* Form Debug Messages */\n            if( 'undefined' != typeof response.debug.form ) {\n                var debugMessages = '';\n                _.each(response.debug.form, function (message, index) {\n                    debugMessages += message + '<br />';\n                });\n                jQuery('.nf-debug-msg').html(debugMessages);\n            }\n\n            /* Console Debug Messages */\n            if( 'undefined' != typeof response.debug.console ) {\n                var style = '';\n                console.log( '%c%s', style, 'NINJA SUPPORT' );\n                _.each(response.debug.console, function (message, index) {\n                    console.log( message );\n                });\n                console.log( '%c%s', style, 'END NINJA SUPPORT' );\n            }\n        }\n\n    });\n\n    return controller;\n} );\n","define('controllers/getFormErrors',[], function() {\n\tvar radioChannel = nfRadio.channel( 'fields' );\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function( model ) {\n\t\t\tnfRadio.channel( 'form' ).reply( 'get:errors', this.getFormErrors );\n\t\t},\n\n\t\tgetFormErrors: function( formID ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', formID );\n\t\t\tvar errors = false;\n\t\t\t\n\t\t\tif ( formModel ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have any errors on our form model.\n\t\t\t\t */\n\t\t\t\tif ( 0 !== formModel.get( 'errors' ).length ) {\n\t\t\t\t\t_.each( formModel.get( 'errors' ).models, function( error ) {\n\t\t\t\t\t\terrors = errors || {};\n\t\t\t\t\t\terrors[ error.get( 'id' ) ] = error.get( 'msg' );\n\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t_.each( formModel.get( 'fields' ).models, function( field ) {\n\t\t\t\t\tif ( field.get( 'type' ) != 'submit' && field.get( 'errors' ).length > 0 ) {\n\t\t\t\t\t\terrors = errors || {};\n\t\t\t\t\t\terrors[ field.get( 'id' ) ] = field.get( 'errors' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn errors;\n\t\t},\n\t});\n\n\treturn controller;\n} );\n","define('controllers/validateRequired',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'blur:field', this.validateRequired );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'change:field', this.validateRequired );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'keyup:field', this.validateKeyup );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'change:modelValue', this.validateModelData );\n\t\t\tthis.listenTo( nfRadio.channel( 'submit' ), 'validate:field', this.validateModelData );\n\t\t},\n\t\t\n\t\tvalidateKeyup: function( el, model, keyCode ) {\n\t\t\tif ( 1 != model.get( 'required' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( ! model.get( 'clean' ) ) {\n\t\t\t\tthis.validateRequired( el, model );\n\t\t\t}\n\t\t},\n\n\t\tvalidateRequired: function( el, model ) {\n\t\t\tif ( 1 != model.get( 'required' ) || ! model.get( 'visible' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar currentValue = jQuery( el ).val();\n\t\t\tvar customReqValidation = nfRadio.channel( model.get( 'type' ) ).request( 'validate:required', el, model );\n\t\t\tvar defaultReqValidation = true;\n\n\t\t\tvar maskPlaceholder = model.get( 'mask' );\n\t\t\tif ( maskPlaceholder ) {\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /9/g, '_' );\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /a/g, '_' );\n\t\t\t\tmaskPlaceholder = maskPlaceholder.replace( /\\*/g, '_' );\n\t\t\t}\n\n\t\t\tif ( ! jQuery.trim( currentValue ) || currentValue == maskPlaceholder ) {\n\t\t\t\tdefaultReqValidation = false;\n\t\t\t}\n\n\t\t\tif ( 'undefined' !== typeof customReqValidation ) {\n\t\t\t\tvar valid = customReqValidation;\n\t\t\t} else {\n\t\t\t\tvar valid = defaultReqValidation;\n\t\t\t}\n\n\t\t\tthis.maybeError( valid, model );\n\t\t},\n\n\t\tvalidateModelData: function( model ) {\n\t\t\tif ( 1 != model.get( 'required' ) || ! model.get( 'visible' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * If we already have a required error on this model, return false\n\t\t\t */\n\t\t\tif ( model.get( 'errors' ).get( 'required-error' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcurrentValue = model.get( 'value' );\n\n\t\t\tvar defaultReqValidation = true;\n\n\t\t\tif ( ! jQuery.trim( currentValue ) ) {\n\t\t\t\tdefaultReqValidation = false;\n\t\t\t}\n\n\t\t\tvar customReqValidation = nfRadio.channel( model.get( 'type' ) ).request( 'validate:modelData', model );\n\t\t\tif ( 'undefined' !== typeof customReqValidation ) {\n\t\t\t\tvar valid = customReqValidation;\n\t\t\t} else {\n\t\t\t\tvar valid = defaultReqValidation;\n\t\t\t}\n\n\t\t\tthis.maybeError( valid, model );\n\n\t\t},\n\n\t\tmaybeError: function( valid, model ) {\n\t\t\tif ( ! valid ) {\n\n\t\t\t\tvar formModel  = nfRadio.channel( 'form-' + model.get( 'formID' ) ).request( 'get:form' );\n\n\t\t\t\tif( 'undefined' != typeof formModel ) {\n\t\t\t\t\tnfRadio.channel('fields').request('add:error', model.get('id'), 'required-error', formModel.get('settings').validateRequiredField);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'remove:error', model.get( 'id' ), 'required-error' );\n\t\t\t}\t\t\t\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/submitError',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.submitErrors );\n\t\t},\n\n\t\tsubmitErrors: function( response, textStatus, jqXHR, formID ) {\n\n\t\t\tif ( _.size( response.errors.fields ) > 0 ) {\n\t\t\t\t_.each( response.errors.fields, function( msg, fieldID ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'add:error', fieldID, 'required-error', msg );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( _.size( response.errors.form ) > 0 ) {\n\t\t\t\t_.each( response.errors.form, function( msg, errorID ) {\n\t\t\t\t\tnfRadio.channel( 'form-' + formID ).request( 'remove:error', errorID );\n\t\t\t\t\tnfRadio.channel( 'form-' + formID ).request( 'add:error', errorID, msg );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * TODO: This needs to be re-worked for backbone. It's not dynamic enough.\n\t\t\t */\n\t\t\t/*\n\t\t\t * Re-show any hidden fields during a form submission re-start.\n\t\t\t */\n\t\t\tjQuery( '#nf-form-' + formID + '-cont .nf-field-container' ).show();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/actionRedirect',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.actionRedirect );\n\t\t},\n\n\t\tactionRedirect: function( response ) {\n\n\t\t\tif ( 'undefined' != typeof response.data.halt && 'undefined' != typeof response.data.halt.redirect && '' != response.data.halt.redirect ) {\n\t\t\t\twindow.location = response.data.halt.redirect;\n\t\t\t}\n\n\t\t\tif ( _.size( response.errors ) == 0 && 'undefined' != typeof response.data.actions ) {\n\n\t\t\t\tif ( 'undefined' != typeof response.data.actions.redirect && '' != response.data.actions.redirect ) {\n\t\t\t\t\twindow.location = response.data.actions.redirect;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/actionSuccess',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.actionSubmit );\n\t\t},\n\n\t\tactionSubmit: function( response ) {\n\t\t\tif ( _.size( response.errors ) == 0 && 'undefined' != typeof response.data.actions ) {\n\t\t\t\tif ( 'undefined' != typeof response.data.actions.success_message && '' != response.data.actions.success_message ) {\n\t\t\t\t\tvar form_id = response.data.form_id;\n\t\t\t\t\tjQuery( '#nf-form-' + form_id + '-cont .nf-response-msg' ).html( response.data.actions.success_message );\n\n\t\t\t\t\tjQuery('html, body').animate({\n\t\t\t\t\t\tscrollTop: ( jQuery( '#nf-form-' + form_id + '-cont .nf-response-msg' ).offset().top - 50 )\n\t\t\t\t\t}, 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldSelect',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'listselect' ), 'init:model', this.register );\n\t\t\tthis.listenTo( nfRadio.channel( 'liststate' ), 'init:model', this.register );\n\t\t\tthis.listenTo( nfRadio.channel( 'listcountry' ), 'init:model', this.register );\n\t\t\tthis.listenTo( nfRadio.channel( 'listmultiselect' ), 'init:model', this.register );\n\t\t\tnfRadio.channel( 'listselect' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t\tnfRadio.channel( 'listmultiselect' ).reply( 'get:calcValue', this.getCalcValue, this );\n\t\t},\n\n\t\tregister: function( model ) {\n\t\t\tmodel.set( 'renderOptions', this.renderOptions );\n\t\t\tmodel.set( 'renderOtherAttributes', this.renderOtherAttributes );\n\t\t\t/*\n\t\t\t * When we init a model, we need to set our 'value' to the selected option's value.\n\t\t\t * This is the list equivalent of a 'default value'.\n\t\t\t */ \n\t\t\tif ( 0 != model.get( 'options' ).length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if this is a multi-select list.\n\t\t\t\t */\n\t\t\t\tif ( 'listmultiselect' == model.get( 'type' ) ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * We're using a multi-select, so we need to check out any selected options and add them together.\n\t\t\t\t\t */\n\t\t\t\t\tvar selected = _.filter( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n\t\t\t\t\tselected = _.map( selected, function( opt ) { return opt.value } );\n\t\t\t\t\tvar value = selected;\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t * Check to see if we have a selected value.\n\t\t\t\t\t */\n\t\t\t\t\tvar selected = _.find( model.get( 'options' ), function( opt ) { return 1 == opt.selected } );\n\t\t\t\t\t/*\n\t\t\t\t\t * We don't have a selected value, so use our first option.\n\t\t\t\t\t */\n\t\t\t\t\tif ( 'undefined' == typeof selected ) {\n\t\t\t\t\t\tselected = _.first( model.get( 'options' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'undefined' != typeof selected && 'undefined' != typeof selected.value ) {\n\t\t\t\t\t\tvar value = selected.value;\n\t\t\t\t\t} else if ( 'undefined' != typeof selected ) {\n\t\t\t\t\t\tvar value = selected.label;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\n\t\t\t\tif ( 'undefined' != typeof selected ) {\n\t\t\t\t\tmodel.set( 'value', value );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\trenderOptions: function() {\n\t\t\tvar html = '';\n\t\t\t_.each( this.options, function( option ) {\n\t\t\t\t\n\n\t\t\t\tif ( ( 1 == option.selected && this.clean ) ) {\n\t\t\t\t\tvar selected = true;\n\t\t\t\t} else if ( _.isArray( this.value ) && -1 != _.indexOf( this.value, option.value ) ) {\n\t\t\t\t\tvar selected = true;\n\t\t\t\t} else if ( ! _.isArray( this.value ) && option.value == this.value ) {\n\t\t\t\t\tvar selected = true;\n\t\t\t\t} else {\n\t\t\t\t\tvar selected = false;\n\t\t\t\t}\n\n\t\t\t\t/*\n                 * TODO: This is a bandaid fix for making sure that each option has a \"visible\" property.\n                 * This should be moved to creation so that when an option is added, it has a visible property by default.\n                 */\n                if ( 'undefined' == typeof option.visible ) {\n                    option.visible = true;\n                }\n\n\t\t\t\toption.selected = selected;\n\t\t\t\toption.fieldID = this.id;\n\t\t\t\toption.classes = this.classes;\n\t\t\t\toption.currentValue = this.value;\n\n\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-listselect-option' );\n\t\t\t\thtml += template( option );\n\t\t\t}, this );\n\n\t\t\treturn html;\n\t\t},\n\n\t\trenderOtherAttributes: function() {\n\t\t\tvar otherAttributes = '';\n\n\t\t\tif( 'listmultiselect' == this.type ){\n\t\t\t\totherAttributes = otherAttributes + ' multiple';\n\t\t\t}\n\n\t\t\treturn otherAttributes;\n\t\t},\n\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\tvar calc_value = 0;\n\t\t\tvar options = fieldModel.get( 'options' );\n\t\t\tif ( 0 != options.length ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if this is a multi-select list.\n\t\t\t\t */\n\t\t\t\tif ( 'listmultiselect' == fieldModel.get( 'type' ) ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * We're using a multi-select, so we need to check out any selected options and add them together.\n\t\t\t\t\t */\n\t\t\t\t\t_.each( fieldModel.get( 'value' ), function( val ) {\n\t\t\t\t\t\tvar tmp_opt = _.find( options, function( opt ) { return opt.value == val } );\n\t\t\t\t\t\tcalc_value = math.add( calc_value, tmp_opt.calc );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t * We are using a single select, so our selected option is in the 'value' attribute.\n\t\t\t\t\t */\n\t\t\t\t\tvar selected = _.find( options, function( opt ) { return fieldModel.get( 'value' ) == opt.value } );\n\t\t\t\t\t/*\n\t\t\t\t\t * We don't have a selected value, so use our first option.\n\t\t\t\t\t */\n\t\t\t\t\tif ( 'undefined' == typeof selected ) {\n\t\t\t\t\t\tselected = fieldModel.get( 'options' )[0];\n\t\t\t\t\t}\t\t\n\t\t\t\t\tcalc_value  = selected.calc;\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn calc_value;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/coreSubmitResponse',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'submit:response', this.actionSubmit );\n\t\t},\n\n\t\tactionSubmit: function( response ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', response.data.form_id );\n\t\t\t/*\n\t\t\t * If we have errors, don't hide or clear.\n\t\t\t */\n\t\t\tif ( 0 != _.size( response.errors ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( 1 == response.data.settings.clear_complete ) {\n\t\t\t\t// nfRadio.channel( 'form-' + response.data.form_id ).trigger( 'reset' );\n\t\t\t\tformModel.get( 'fields' ).reset( formModel.get( 'loadedFields' ) );\n\t\t\t}\n\n\t\t\tif ( 1 == response.data.settings.hide_complete ) {\n\t\t\t\t/**\n\t\t\t\t * TODO: This needs to be re-worked for backbone. It's not dynamic enough.\n\t\t\t\t */\n\t\t\t\tformModel.trigger( 'hide' );\n\t\t\t\t// jQuery( '.nf-fields' ).hide();\n\t\t\t\t// jQuery( '.nf-form-title' ).hide();\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldProduct',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'product' ), 'init:model', this.register );\n            nfRadio.channel( 'product' ).reply( 'get:calcValue', this.getCalcValue, this );\n        },\n\n        register: function( model ) {\n            model.set( 'renderProductQuantity', this.renderProductQuantity );\n            model.set( 'renderProduct', this.renderProduct );\n            model.set( 'renderOptions', this.renderOptions );\n        },\n\n        renderProduct: function(){\n            switch( this.product_type ) {\n                case 'user':\n                    var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-textbox' );\n                    return template( this );\n                    break;\n                case 'hidden':\n                    var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-hidden' );\n                    return template( this );\n                    break;\n\n                case 'dropdown':\n                    var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-product-dropdown' );\n                    return template( this );\n                    break;\n                default:\n                    var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-product-single' );\n                    return template( this );\n            }\n        },\n\n        renderProductQuantity: function(){\n            if ( 1 == this.product_use_quantity ) {\n                var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-product-quantity' );\n                return template( this );\n            }\n        },\n\n        renderOptions: function() {\n            var that = this;\n            var html = '';\n            _.each( this.options, function( option ) {\n                if ( 1 == option.selected ) {\n                    var selected = true;\n                } else {\n                    var selected = false;\n                }\n\n                option.selected = selected;\n                option.fieldID = that.id;\n                option.classes = that.classes;\n                option.currentValue = that.value;\n\n                var template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-product-' + that.product_type + '-option' );\n                html += template( option );\n            } );\n\n            return html;\n        },\n\n        getCalcValue: function( fieldModel ) {\n\n            var product_price = fieldModel.get( 'product_price' );\n            var product_quantity = fieldModel.get( 'value' );\n\n            return product_price * product_quantity;\n        }\n    });\n\n    return controller;\n} );\n\n","define('controllers/fieldTotal',[], function() {\n    var controller = Marionette.Object.extend( {\n\n        totalModel: {},\n\n        productTotals: {},\n\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'total' ), 'init:model', this.register );\n            this.listenTo( nfRadio.channel( 'shipping' ), 'init:model', this.registerShipping );\n        },\n\n        register: function( totalModel ){\n            this.totalModel = totalModel;\n\n            var formID = totalModel.get( 'formID' );\n            this.listenTo( nfRadio.channel( 'form-' + formID ), 'loaded', this.onFormLoaded );\n\n            this.listenTo( nfRadio.channel( 'product' ), 'change:modelValue', this.onChangeProduct );\n            this.listenTo( nfRadio.channel( 'quantity' ), 'change:modelValue', this.onChangeQuantity );\n        },\n\n        registerShipping: function( shippingModel ){\n            this.shippingCost = shippingModel.get( 'shipping_cost' );\n        },\n\n        onFormLoaded: function( formModel ){\n\n            var fieldModels = formModel.get( 'fields' ).models;\n\n            var productFields = {};\n            var quantityFields = {};\n\n            for( var model in fieldModels ){\n\n                var field = fieldModels[ model ];\n                var fieldID = field.get( 'id' );\n\n                // TODO: Maybe use switch\n                if( 'product' == field.get( 'type' ) ){\n                    productFields[ fieldID ] = field;\n                } else if( 'quantity' == field.get( 'type' ) ){\n                    var productID = field.get( 'product_assignment' );\n                    quantityFields[ productID ] = field;\n                }\n            }\n\n            for( var productID in productFields ){\n\n                var product = productFields[ productID ];\n\n                var productPrice = Number( product.get( 'product_price' ) );\n\n                if( quantityFields[ productID ] ){\n\n                    productPrice *= quantityFields[ productID ].get( 'value' );\n\n                } else if( 1 == product.get( 'product_use_quantity' ) ){\n\n                    productPrice *= product.get( 'value' );\n\n                }\n\n                this.productTotals[ productID ] = productPrice;\n            }\n\n            this.updateTotal();\n        },\n\n        onChangeProduct: function( model ){\n            var productID = model.get( 'id' );\n            var productPrice = Number( model.get( 'product_price' ) );\n            var productQuantity = Number( model.get( 'value' ) );\n            var newTotal = productQuantity * productPrice;\n            this.productTotals[ productID ] = newTotal;\n\n            this.updateTotal();\n        },\n\n        onChangeQuantity: function( model ){\n            var productID = model.get( 'product_assignment' );\n            var productField = nfRadio.channel( 'fields' ).request( 'get:field', productID );\n            var productPrice = Number( productField.get( 'product_price' ) );\n\n            var quantity = Number( model.get( 'value' ) );\n\n            var newTotal = quantity * productPrice;\n\n            this.productTotals[ productID ] = newTotal;\n\n            this.updateTotal();\n        },\n\n        updateTotal: function(){\n\n            var newTotal = 0;\n\n            for( var product in this.productTotals ){\n                newTotal += Number( this.productTotals[ product ] );\n            }\n\n            if( newTotal && this.shippingCost ) {\n                // Only add shipping if there is a cost.\n                newTotal += Number(this.shippingCost);\n            }\n\n            this.totalModel.set( 'value', newTotal.toFixed( 2 ) );\n            // this.totalModel.set( 'reRender', true );\n            // this.totalModel.set( 'reRender', false );\n            this.totalModel.trigger( 'reRender' );\n        }\n    });\n\n    return controller;\n});\n","define('controllers/fieldQuantity',[], function() {\n    var controller = Marionette.Object.extend( {\n\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'quantity' ), 'init:model', this.registerQuantity );\n        },\n\n        registerQuantity: function( model ){\n            var productID = model.get( 'product_assignment' );\n            var product = nfRadio.channel( 'fields' ).request( 'get:field', productID );\n\n            if( product ) {\n                product.set('product_use_quantity', 0);\n            }\n        },\n\n    });\n\n    return controller;\n});\n","/**\n * Model that represents a calculation.\n *\n * On init, we trigger a radio message so that controllers can do things when a calc model inits.\n */\ndefine( 'models/calcModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tinitialize: function() {\n\t\t\t// Set our form id\n\t\t\tthis.set( 'formID', this.collection.options.formModel.get( 'id' ) );\n\t\t\t// Set our initial fields object to empty. This will hold our key/value pairs.\n\t\t\tthis.set( 'fields', {} );\n\t\t\t// Trigger a radio message to let controllers know we've inited this model.\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'init:model', this );\n\t\t\t// When we change the value of this calculation, send out a radio message\n\t\t\tthis.on( 'change:value', this.changeValue, this );\n\t\t},\n\n\t\t/**\n\t\t * Trigger a radio message when a field present in our calculation changes\n\t\t *\n\t\t * The listener that triggers/calls this function is in controllers/calculations\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeField: function( fieldModel ) {\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:field', this, fieldModel );\n\t\t},\n\n\t\tchangeCalc: function( targetCalcModel ) {\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:calc', this, targetCalcModel );\n\t\t},\n\n\t\tchangeValue: function() {\n\t\t\tnfRadio.channel( 'calc' ).trigger( 'change:value', this );\n\t\t}\n\t} );\n\n\treturn model;\n} );\n\n","define( 'models/calcCollection',['models/calcModel'], function( CalcModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: CalcModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options;\n\t\t\t/*\n\t\t\t * Respond to requests for our calc model\n\t\t\t */\n\t\t\tnfRadio.channel( 'form-' + options.formModel.get( 'id' ) ).reply( 'get:calc', this.getCalc, this );\n\t\t},\n\n\t\tgetCalc: function( key ) {\n\t\t\treturn this.findWhere( { name: key } );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Controller responsible for keeping up with calculations.\n */\ndefine('controllers/calculations',['models/calcCollection'], function( CalcCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.calcs = {};\n\t\t\tthis.displayFields = {};\n\t\t\t// When our form initialises, check to see if there are any calculations that need to be tracked.\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'loaded', this.registerCalcs );\n\n\t\t\t// When a calc model is initialised, run a setup function.\n\t\t\t// this.listenTo( nfRadio.channel( 'calc' ), 'init:model', this.setupCalc );\n\n\t\t\t// When a field referenced by a calc model changes, update our calc.\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:field', this.changeField );\n\n\t\t\t// When a calculation referenced by a calc model changes, update our calc.\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:calc', this.changeCalc );\n\n\t\t\t/*\n\t\t\t * Listen to our field model init for fields that want to display calc values.\n\t\t\t * If that field has a calc merge tag, replace it with the default calc value.\n\t\t\t */\n\t\t\tvar that = this;\n\t\t\t_.each( nfFrontEnd.use_merge_tags.calculations, function( fieldType ) {\n\t\t\t\tthat.listenTo( nfRadio.channel( 'fields-' + fieldType ), 'init:model', that.initDisplayField );\n\t\t\t} );\n\t\t\t\n\t\t\t// When we change our calc value, update any display fields.\n\t\t\tthis.listenTo( nfRadio.channel( 'calc' ), 'change:value', this.updateDisplayFields );\n\n\t\t\t// Set an init variable so that we only call reRender on the display field on change, not on init.\n\t\t\tthis.init = {};\n\t\t},\n\n\t\t/**\n\t\t * When our form loads, create a collection out of any calculations.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model formModel\n\t\t * @return void\n\t\t */\n\t\tregisterCalcs: function( formModel ) {\n\t\t\tvar calcCollection = new CalcCollection( formModel.get( 'settings' ).calculations, { formModel: formModel } );\n\t\t\tthis.calcs[ formModel.get( 'id' ) ] = calcCollection;\n\t\t\tvar that = this;\n\n\t\t\t_.each( calcCollection.models, function( calcModel ) {\n\t\t\t\t/*\n\t\t\t\t * We set a property on our init variable for the calc model we're looping over.\n\t\t\t\t * This property is set to true so that when we make changes to the calc model on the next line\n\t\t\t\t * the field view doesn't try to redraw itself.\n\t\t\t\t * If we don't do this, the 'reRender' attribute of the model will be set before the view is initialized,\n\t\t\t\t * which means that setting 'reRender' to true will never re-render the view.\n\t\t\t\t */\n\t\t\t\tthat.init[ calcModel.get( 'name' ) ] = true;\n\t\t\t\t// Setup our calculation models with initial values and register listeners for calc-related fields.\n\t\t\t\tthat.setupCalc( calcModel );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * When a calculation model is instantiated from the registerCalcs function:\n\t\t *\n\t\t * Use a regex to get an array of the field keys\n\t\t * Setup an initial key/values array\n\t\t * Check for any references to other calculations\n\t\t * Set the initial value of our calculation\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model calcModel\n\t\t * @return void\n\t\t */\n\t\tsetupCalc: function( calcModel ) {\n\t\t\t// Setup our that var so we can access 'this' context in our loop.\n\t\t\tvar that = this;\n\t\t\t// Get our equation\n\t\t\tvar eq = calcModel.get( 'eq' );\n\t\t\t// We want to keep our original eq intact, so we use a different var for string replacment.\n\t\t\tvar eqValues = eq;\n\n\t\t\t/* TODO:\n\t\t\t * It might be possible to refactor these two if statements.\n\t\t\t * The difficulty is that each has a different method of retreiving the specific data model.\n\t\t\t */\n\t\t\t// Check to see if we have any field merge tags in our equation.\n\t\t\tvar fields = eq.match( new RegExp( /{field:(.*?)}/g ) );\n\t\t\tif ( fields ) {\n\t\t\t\t/*\n\t\t\t\t * fields is now an array of field keys that looks like:\n\t\t\t\t * ['{field:key'], ['{field:key'], etc.\n\t\t\t\t *\n\t\t\t\t * We need to run a function with each of our field keys to setup our field key array and hook up our field change listner.\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\tfields = fields.map( function( field ) {\n\t\t\t\t\t// field will be {field:key}\n\t\t\t\t\tvar key = field.replace( ':calc}', '' ).replace( '}', '' ).replace( '{field:', '' );\n\n\t\t\t\t\t// Get our field model\n\t\t\t\t\tfieldModel = nfRadio.channel( 'form-' + calcModel.get( 'formID' ) ).request( 'get:fieldByKey', key );\n\n\t\t\t\t\tif( 'undefined' == typeof fieldModel ) return;\n\t\t\t\t\t// Register a listener in our field model for value changes.\n\t\t\t\t\tfieldModel.on( 'change:value', calcModel.changeField, calcModel );\n\t\t\t\t\t// Get our calc value from our field model.\n\t\t\t\t\tvar calcValue = that.getCalcValue( fieldModel );\n\t\t\t\t\t// Add this field to our internal key/value object.\n\t\t\t\t\tthat.updateCalcFields( calcModel, key, calcValue );\n\t\t\t\t\t// Update the string tracking our merged eq with the calc value.\n\t\t\t\t\teqValues = that.replaceKey( 'field', key, calcValue, eqValues );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Check to see if we have any calc merge tags in our equation.\n\t\t\tvar calcs = eq.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\tif ( calcs ) {\n\t\t\t\t/*\n\t\t\t\t * calcs is now an array of calc keys that looks like:\n\t\t\t\t * ['{calc:key'], ['{calc:key'], etc.\n\t\t\t\t *\n\t\t\t\t * We need to run a function with each of our calc keys to setup our calc key array and hook up our calc change listner.\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\tcalcs = calcs.map( function( calc ) {\n\t\t\t\t\t// calc will be {calc:name}\n\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\t\t\t\t\t// Get our calc model\n\t\t\t\t\tvar targetCalcModel = calcModel.collection.findWhere( { name: name } );\n\t\t\t\t\t// Listen for changes on our calcluation, since we need to update our calc when it changes.\n\t\t\t\t\ttargetCalcModel.on( 'change:value', calcModel.changeCalc, calcModel );\n\t\t\t\t\t// // Get our calc value from our calc model.\n\t\t\t\t\tvar calcValue = targetCalcModel.get( 'value' );\n\t\t\t\t\t// Update the string tracking our merged eq with the calc value.\n\t\t\t\t\teqValues = that.replaceKey( 'calc', name, calcValue, eqValues );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\t// Evaluate the equation and update the value of this model.\n\t\t\ttry {\n\t\t\t\tcalcModel.set('value', math.eval(eqValues));\n\t\t\t} catch( e ) {\n\t\t\t\tconsole.log( e );\n\t\t\t}\n\n\t\t\t// Debugging console statement.\n\t\t\t// console.log( eqValues + ' = ' + calcModel.get( 'value' ) );\n\t\t},\n\n\t\t/**\n\t\t * Update an item in our key/value pair that represents our fields and calc values.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tcalcModel\n\t\t * @param  string \t\t\tkey\n\t\t * @param  string \t\t\tcalcValue\n\t\t * @return void\n\t\t */\n\t\tupdateCalcFields: function( calcModel, key, calcValue ) {\n\t\t\tvar fields = calcModel.get( 'fields' );\n\t\t\tfields[ key ] = calcValue;\n\t\t\tcalcModel.set( 'fields', fields );\n\t\t},\n\n\t\t/**\n\t\t * Get a calc value from a field model.\n\t\t *\n\t\t * Sends a request to see if there's a special calc value\n\t\t * Uses the value of the field if there is not.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model fieldModel\n\t\t * @return value\n\t\t */\n\t\tgetCalcValue: function( fieldModel ) {\n\t\t\t/*\n\t\t\t * Send out a request on the field type and parent type channel asking if they need to modify the calc value.\n\t\t\t * This is helpful for fields like lists that can have a different calc_value than selected value.\n\t\t\t */\n\t\t\tvar value = nfRadio.channel( fieldModel.get( 'type' ) ).request( 'get:calcValue', fieldModel );\n\n\t\t\t// If value is 'undefined', then we got no response. Set value to field model value.\n\t\t\tif ( 'undefined' == typeof value ) {\n\t\t\t\tif ( jQuery.isNumeric( fieldModel.get( 'value' ) ) ) {\n\t\t\t\t\tvalue = fieldModel.get( 'value' );\n\t\t\t\t} else {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! fieldModel.get( 'visible' ) ) {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\n\t\t\treturn ( jQuery.isNumeric( value ) ) ? value : 0;\n\t\t},\n\n\t\t/**\n\t\t * Replace instances of key with calcValue. This is used to replace one key at a time.\n\t\t *\n\t\t * If no eq is passed, use calcModel eq.\n\t\t *\n\t\t * Returns a string with instances of key replaced with calcValue.\n\t\t * \n\t\t * @since  version\n\t\t * @param  string \tkey       \n\t\t * @param  string \tcalcValue \n\t\t * @param  string \teq        \n\t\t * @return string \teq      \n\t\t */\n\t\treplaceKey: function( type, key, calcValue, eq ) {\n\t\t\teq = eq || calcModel.get( 'eq' );\n\n\t\t\ttag = '{' + type + ':' + key + '}';\n\t\t\tvar reTag = new RegExp( tag, 'g' );\n\n\t\t\tcalcTag = '{' + type + ':' + key + ':calc}';\n\t\t\tvar reCalcTag = new RegExp( calcTag, 'g' );\n\n\t\t\teq = eq.replace( reTag, calcValue );\n\t\t\teq = eq.replace( reCalcTag, calcValue );\n\n\t\t\treturn eq;\n\t\t},\n\n\t\t/**\n\t\t * Takes a calcModel and returns a string eq with all keys replaced by their appropriate calcValues.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tcalcModel\n\t\t * @return string\t\t\teq\n\t\t */\n\t\treplaceAllKeys: function( calcModel ) {\n\t\t\tvar eq = calcModel.get( 'eq' );\n\t\t\tvar that = this;\n\t\t\t_.each( calcModel.get( 'fields' ), function( value, key ) {\n\t\t\t\teq = that.replaceKey( 'field', key, value, eq );\n\t\t\t} );\n\n\t\t\t// If we have any calc merge tags, replace those as well.\n\t\t\tvar calcs = eq.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\tif ( calcs ) {\n\t\t\t\t_.each( calcs, function( calc ) {\n\t\t\t\t\t// calc will be {calc:key}\n\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\t\t\t\t\tvar targetCalcModel = calcModel.collection.findWhere( { name: name } );\n\t\t\t\t\tvar re = new RegExp( calc, 'g' );\n\t\t\t\t\teq = eq.replace( re, targetCalcModel.get( 'value' ) );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn eq;\n\t\t},\n\n\t\t/**\n\t\t * Function that's called when a field within the calculation changes.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model calcModel\n\t\t * @param  backbone.model fieldModel\n\t\t * @return void\n\t\t */\n\t\tchangeField: function( calcModel, fieldModel ) {\n\t\t\tvar key = fieldModel.get( 'key' );\n\t\t\tvar value = this.getCalcValue( fieldModel );\n\t\t\tthis.updateCalcFields( calcModel, key, value );\n\t\t\tvar eqValues = this.replaceAllKeys( calcModel );\n\t\t\tcalcModel.set( 'value', math.eval( eqValues ) );\n\n\t\t\t// Debugging console statement.\n\t\t\t// console.log( eqValues + ' = ' + calcModel.get( 'value' ) );\t\t\n\t\t},\n\n\t\tinitDisplayField: function( fieldModel ) {\n\n\t\t\tif( ! fieldModel.get( 'default' ) || 'string' != typeof fieldModel.get( 'default' ) ) return;\n\n\t\t\tvar calcs = fieldModel.get( 'default' ).match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\tif ( calcs ) {\n\t\t\t\t_.each( calcs, function( calcName ) {\n\t\t\t\t\tcalcName = calcName.replace( '{calc:', '' ).replace( '}', '' ).replace( ':2', '' );\n\t\t\t\t\tthis.displayFields[ calcName ] = this.displayFields[ calcName ] || [];\n\t\t\t\t\tthis.displayFields[ calcName ].push( fieldModel );\n\t\t\t\t}, this );\n\t\t\t}\n\t\t},\n\n\t\tupdateDisplayFields: function( calcModel ) {\n\t\t\tvar that = this;\n\t\t\tif ( 'undefined' != typeof this.displayFields[ calcModel.get( 'name' ) ] ) {\n\t\t\t\t_.each( this.displayFields[ calcModel.get( 'name' ) ], function( fieldModel ) {\n\t\t\t\t\tvar value = fieldModel.get( 'default' );\n\t\t\t\t\tvar calcs = value.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\t\t\t_.each( calcs, function( calc ) {\n\t\t\t\t\t\tvar rounding = false;\n\t\t\t\t\t\t// calc will be {calc:key} or {calc:key:2}\n\t\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * TODO: Bandaid for rounding calculations to two decimal places when displaying the merge tag.\n\t\t\t\t\t\t * Checks to see if we have a :2. If we do, remove it and set our rounding variable to true.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif ( -1 != name.indexOf( ':2' ) ) {\n\t\t\t\t\t\t\trounding = true;\n\t\t\t\t\t\t\tname = name.replace( ':2', '' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar calcModel = that.calcs[ fieldModel.get( 'formID' ) ].findWhere( { name: name } );\n\t\t\t\t\t\tvar re = new RegExp( calc, 'g' );\n\t\t\t\t\t\tvar calcValue = calcModel.get( 'value' ) ;\n\t\t\t\t\t\tif ( rounding ) {\n\t\t\t\t\t\t\tcalcValue = calcValue.toFixed( 2 );\n\t\t\t\t\t\t\trounding = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue = value.replace( re, calcValue );\n\t\t\t\t\t} );\n\t\t\t\t\tfieldModel.set( 'value', value );\n\t\t\t\t\tif ( ! that.init[ calcModel.get( 'name' ) ] ) {\n\t\t\t\t\t\t// fieldModel.set( 'reRender', true );\n\t\t\t\t\t\tfieldModel.trigger( 'reRender' );\n\t\t\t\t\t}\n\t\t\t\t\tthat.init[ calcModel.get( 'name' ) ] = false;\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tgetCalc: function( name, formID ) {\n\t\t\treturn this.calcs[ formID ].findWhere( { name: name } );\n\t\t},\n\n\t\tchangeCalc: function( calcModel, targetCalcModel ) {\n\t\t\tvar eqValues = this.replaceAllKeys( calcModel );\n\t\t\tcalcModel.set( 'value', math.eval( eqValues ) );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldDate',[], function() {\n    var controller = Marionette.Object.extend({\n\n        initialize: function () {\n            this.listenTo( nfRadio.channel( 'date' ), 'render:view', this.initDatepicker );\n        },\n\n        initDatepicker: function ( view ) {\n\n            var el = jQuery( view.el ).find( '.nf-element' )[0];\n            var dateObject = pikadayResponsive( el, {\n                format: view.model.get( 'date_format' ),\n                outputFormat: view.model.get( 'date_format' ),\n                classes: jQuery( el ).attr( \"class\" ),\n                pikadayOptions: {\n                    yearRange:  this.getYearRange( view.model )\n                }\n            } );\n            if ( 1 == view.model.get( 'date_default' ) ) {\n               dateObject.setDate( moment() ); \n            }\n\n            nfRadio.channel( 'pikaday' ).trigger( 'init', dateObject, view.model );\n        },\n\n        getYearRange: function( fieldModel ) {\n            var yearRange      = 10;\n            var yearRangeStart = fieldModel.get( 'year_range_start' );\n            var yearRangeEnd   = fieldModel.get( 'year_range_end'   );\n\n            if( yearRangeStart && yearRangeEnd ){\n                return [ yearRangeStart, yearRangeEnd ];\n            } else if( yearRangeStart ) {\n                yearRangeEnd = yearRangeStart + yearRange;\n                return [ yearRangeStart, yearRangeEnd ];\n            } else if( yearRangeEnd ) {\n                yearRangeStart = yearRangeEnd - yearRange;\n                return [ yearRangeStart, yearRangeEnd ];\n            }\n\n            return yearRange;\n        }\n    });\n\n    return controller;\n});\n","define('controllers/fieldRecaptcha',[], function() {\n    var controller = Marionette.Object.extend({\n\n        initialize: function () {\n            this.listenTo( nfRadio.channel( 'recaptcha' ), 'init:model', this.initRecaptcha );\n        },\n\n       \tinitRecaptcha: function ( model ) {\n       \t\tthis.model = model;\n        \tnfRadio.channel( 'recaptcha' ).reply( 'update:response', this.updateResponse, this );\n        },\n\n        updateResponse: function( response ) {\n        \tthis.model.set( 'value', response );\n            nfRadio.channel( 'fields' ).request( 'remove:error', this.model.get( 'id' ), 'required-error' );\n        }\n    });\n\n    return controller;\n} );\n","/**\n * When a form is loaded, enable any help text that appears on the page.\n */\ndefine('controllers/helpText',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'render:view', this.initHelpText );\n\n\t\t\tnfRadio.channel( 'form' ).reply( 'init:help', this.initHelpText );\n\t\t},\n\n\t\tinitHelpText: function( view ) {\n\t\t\tjQuery( view.el ).find( '.nf-help' ).each( function() {\n\t\t\t\tvar jBox = jQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\tcontent: jQuery( this ).data( 'text' )\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * When a form is loaded, enable any rtes in textareas.\n */\ndefine('controllers/fieldTextareaRTE',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'textarea' ), 'render:view', this.initTextareaRTEs );\n\t\t\tthis.listenTo( nfRadio.channel( 'textarea' ), 'click:extra', this.clickExtra );\n\n\t\t\t// Instantiates the variable that holds the media library frame.\n\t\t\tthis.meta_image_frame;\n\n\t\t\tthis.currentContext = {};\n\n\t\t\tif( 'undefined' == typeof jQuery.summernote ) return;\n\n\t\t\tjQuery.summernote.options.icons = {\n\t\t        'align': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignCenter': 'dashicons dashicons-editor-aligncenter',\n\t\t        'alignJustify': 'dashicons dashicons-editor-justify',\n\t\t        'alignLeft': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignRight': 'dashicons dashicons-editor-alignright',\n\t\t        'indent': 'dashicons dashicons-editor-indent',\n\t\t        'outdent': 'dashicons dashicons-editor-outdent',\n\t\t        // 'arrowsAlt': 'dashicons fa-arrows-alt',\n\t\t        'bold': 'dashicons dashicons-editor-bold',\n\t\t        'caret': 'dashicons dashicons-arrow-down',\n\t\t        // 'circle': 'dashicons fa-circle',\n\t\t        'close': 'dashicons dashicons-dismiss',\n\t\t        'code': 'dashicons dashicons-editor-code',\n\t\t        'eraser': 'dashicons dashicons-editor-removeformatting',\n\t\t        // 'font': 'dashicons fa-font',\n\t\t        // 'frame': 'dashicons fa-frame',\n\t\t        'italic': 'dashicons dashicons-editor-italic',\n\t\t        'link': 'dashicons dashicons-admin-links',\n\t\t        'unlink': 'dashicons dashicons-editor-unlink',\n\t\t        'magic': 'dashicons dashicons-editor-paragraph',\n\t\t        // 'menuCheck': 'dashicons fa-check',\n\t\t        'minus': 'dashicons dashicons-minus',\n\t\t        'orderedlist': 'dashicons dashicons-editor-ol',\n\t\t        // 'pencil': 'dashicons fa-pencil',\n\t\t        // 'picture': 'dashicons fa-picture-o',\n\t\t        // 'question': 'dashicons fa-question',\n\t\t        'redo': 'dashicons dashicons-redo',\n\t\t        'square': 'dashicons fa-square',\n\t\t        // 'strikethrough': 'dashicons fa-strikethrough',\n\t\t        // 'subscript': 'dashicons fa-subscript',\n\t\t        // 'superscript': 'dashicons fa-superscript',\n\t\t        'table': 'dashicons dashicons-editor-table',\n\t\t        // 'textHeight': 'dashicons fa-text-height',\n\t\t        // 'trash': 'dashicons fa-trash',\n\t\t        'underline': 'dashicons dashicons-editor-underline',\n\t\t        'undo': 'dashicons dashicons-undo',\n\t\t        'unorderedlist': 'dashicons dashicons-editor-ul',\n\t\t        // 'video': 'dashicons fa-youtube-play'\n\t\t      };\n\n\t\t},\n\n\t\tinitTextareaRTEs: function( view ) {\n\t\t\tif ( 1 != view.model.get( 'textarea_rte' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t/*\n\t\t\t * Custom Button for links\n\t\t\t */\n\t\t\tvar that = this;\n\t\t\t// var linkButton = this.linkButton();\n\t\t\tvar linkButton = function( context ) {\n\t\t\t\treturn that.linkButton( context );\n\t\t\t}\n\t\t\tvar mediaButton = function( context ) {\n\t\t\t\treturn that.mediaButton( context );\n\t\t\t}\n\n\t\t\tvar toolbar = [\n\t\t\t\t[ 'paragraphStyle', ['style'] ],\n\t\t\t\t[ 'fontStyle', [ 'bold', 'italic', 'underline','clear' ] ],\n\t\t\t\t[ 'lists', [ 'ul', 'ol' ] ],\n\t\t\t    [ 'paragraph', [ 'paragraph' ] ],\n\t\t\t    [ 'customGroup', [ 'linkButton', 'unlink' ] ],\n\t\t\t    [ 'table', [ 'table' ] ],\n\t\t\t    [ 'actions', [ 'undo', 'redo' ] ],\n\t\t\t];\n\n\t\t\tif ( 1 == view.model.get( 'textarea_media' ) && 0 != userSettings.uid ) {\n\t\t\t\ttoolbar.push( [ 'tools', [ 'mediaButton' ] ] );\n\t\t\t}\n\n\t\t\tjQuery( view.el ).find( '.nf-element' ).summernote( {\n\t\t\t\ttoolbar: toolbar,\n\t\t\t\tbuttons: {\n\t\t\t\t\tlinkButton: linkButton,\n\t\t\t\t\tmediaButton: mediaButton\n\t\t\t\t},\n\t\t\t\theight: 150,   //set editable area's height\n\t\t\t\tcodemirror: { // codemirror options\n\t\t\t\t    theme: 'monokai',\n\t\t\t\t    lineNumbers: true\n\t\t\t\t},\n\t\t\t\tprettifyHtml: true,\n\t\t\t\tcallbacks: {\n\t\t\t\t\tonChange: function( e ) {\n\t\t\t\t\t\tview.model.set( 'value', jQuery( this ).summernote( 'code' ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tvar linkMenu = jQuery( view.el ).find( '.link-button' ).next( '.dropdown-menu' ).find( 'button' );\n\t\t\tlinkMenu.replaceWith(function () {\n\t\t\t    return jQuery( '<div/>', {\n\t\t\t        class: jQuery( linkMenu ).attr( 'class' ),\n\t\t\t        html: this.innerHTML\n\t\t\t    } );\n\t\t\t} );\n\t\t},\n\n\t\tlinkButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar linkButton = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-rte-link-button' );\n\t\t\tvar linkDropdown = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-rte-link-dropdown' );\n\t\t\treturn ui.buttonGroup([\n\t\t\t\tui.button({\n\t            className: 'dropdown-toggle link-button',\n\t            contents: linkButton({}),\n\t            tooltip: nfi18n.fieldTextareaRTEInsertLink,\n\t            click: function( e ) {\n\t            \tthat.clickLinkButton( e, context );\n\t            },\n\t            data: {\n\t              toggle: 'dropdown'\n\t            }\n\t          }),\n\t\t\t\tui.dropdown([\n\t            ui.buttonGroup({\n\t              children: [\n\t                ui.button({\n\t                  contents: linkDropdown({}),\n\t                  tooltip: ''\n\t                }),\n\t              ]\n\t            })\n\t          ])\n\t\t\t]).render();\n\t\t},\n\n\t\tmediaButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar mediaButton = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-rte-media-button' );\n\t\t\treturn ui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: mediaButton({}),\n\t            tooltip: nfi18n.fieldTextareaRTEInsertMedia,\n\t            click: function( e ) {\n\t            \tthat.openMediaManager( e, context );\n\t            }\n\t          }).render();\n\t\t},\n\n\t\topenMediaManager: function( e, context ) {\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\t// If the frame already exists, re-open it.\n\t\t\tif ( this.meta_image_frame ) {\n\t\t\t\tthis.meta_image_frame.open();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Sets up the media library frame\n\t\t\tthis.meta_image_frame = wp.media.frames.meta_image_frame = wp.media({\n\t\t\t\ttitle: nfi18n.fieldTextareaRTESelectAFile,\n\t\t\t\tbutton: { text:  'insert' }\n\t\t\t});\n\n\t\t\tvar that = this;\n\n\t\t\t// Runs when an image is selected.\n\t\t\tthis.meta_image_frame.on('select', function(){\n\n\t\t\t\t// Grabs the attachment selection and creates a JSON representation of the model.\n\t\t\t\tvar media_attachment = that.meta_image_frame.state().get('selection').first().toJSON();\n\t\t\t\tthat.insertMedia( media_attachment, context );\n\t\t\t});\n\n\t\t\t// Opens the media library frame.\n\t\t\tthis.meta_image_frame.open();\n\t\t},\n\n\t\tclickLinkButton: function ( e, context ) {\n\t\t\tvar range = context.invoke( 'editor.createRange' );\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\tvar text = range.toString()\n\t\t\tthis.currentContext = context;\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('hide.bs.dropdown', function ( e ) {\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('shown.bs.dropdown', function ( e ) {\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-text' ).val( text );\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-url' ).focus();\n\t\t\t});\n\t\t},\n\n\t\tclickExtra: function( e ) {\n\t\t\tvar textEl = jQuery( e.target ).parent().find( '.link-text' );\n\t\t\tvar urlEl = jQuery( e.target ).parent().find( '.link-url' );\n\t\t\tvar isNewWindowEl = jQuery( e.target ).parent().find( '.link-new-window' );\n\t\t\tthis.currentContext.invoke( 'editor.restoreRange' );\n\t\t\tif ( jQuery( e.target ).hasClass( 'insert-link' ) ) {\n\t\t\t\tvar text = textEl.val();\n\t\t\t\tvar url = urlEl.val();\n\t\t\t\tvar isNewWindow = ( isNewWindowEl.prop( 'checked' ) ) ? true: false;\n\t\t\t\tif ( 0 != text.length && 0 != url.length ) {\n\t\t\t\t\tthis.currentContext.invoke( 'editor.createLink', { text:text, url: url, isNewWindow: isNewWindow } );\n\t\t\t\t}\n\t\t\t}\n\t\t\ttextEl.val( '' );\n\t\t\turlEl.val( '' );\n\t\t\tisNewWindowEl.prop( 'checked', false );\n\t\t\tjQuery( e.target ).closest( 'div.note-btn-group.open' ).removeClass( 'open' );\n\t\t},\n\n\t\tinsertMedia: function( media, context ) {\n\t\t\tcontext.invoke( 'editor.restoreRange' );\n\t\t\tif ( 'image' == media.type ) {\n\t\t\t\tcontext.invoke( 'editor.insertImage', media.url );\n\t\t\t} else {\n\t\t\t\tcontext.invoke( 'editor.createLink', { text: media.filename, url: media.url } );\n\t\t\t}\n\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","define('controllers/fieldStarRating',[], function() {\n    var controller = Marionette.Object.extend( {\n\n        initialize: function() {\n        \tthis.listenTo( nfRadio.channel( 'starrating' ), 'init:model', this.register );\n            this.listenTo( nfRadio.channel( 'starrating' ), 'render:view', this.initRating );\n        },\n\n        register: function( model ) {\n\t\t\tmodel.set( 'renderRatings', this.renderRatings );\n\t\t},\n\n        initRating: function( view ){\n            jQuery( view.el ).find( '.starrating' ).rating();\n        },\n\n        renderRatings: function() {\n        \tvar html = '';\n        \tfor (var i = 0; i <= this.default - 1; i++) {\n        \t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-starrating-star' );\n                var num = i + 1;\n        \t\thtml += template( { id: this.id, classes: this.classes, num: num } );\n        \t}\n        \treturn html;\n        }\n\n    });\n\n    return controller;\n});\n","define('controllers/fieldTerms',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'terms' ), 'init:model', this.register );\n        },\n\n        register: function( model ) {\n            // nfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'click:extra', e, this.model );\n            this.listenTo( nfRadio.channel( 'field-' + model.get( 'id' ) ), 'click:extra', this.clickExtra );\n            this.listenTo( nfRadio.channel( 'field-' + model.get( 'id' ) ), 'keyup:field', this.keyUpExtra );\n        },\n        \n        clickExtra: function( e, model ) {\n            var el = jQuery( e.currentTarget );\n            var value = el.parent().find( '.extra-value' ).val();\n            this.addOption( model, value );\n        },\n\n        keyUpExtra: function( el, model, keyCode ) {\n            if( 13 != keyCode ) return;\n            this.addOption( model, el.val() );\n        },\n\n        addOption: function( model, value ) {\n            if( ! value ) return;\n            var options = model.get( 'options' );\n            var new_option = {\n                label: value,\n                value: value,\n                selected: 0,\n            };\n            options.push( new_option );\n\n            var selected = model.get( 'value' );\n            selected.push( value );\n\n            // model.set( 'reRender', true );\n            model.trigger( 'reRender' );\n        }\n        \n    });\n\n    return controller;\n} );\n","/**\n * Before we display our form content, ask if anyone wants to give us a different view.\n * Before we do anything with the data, pass it through any loading filters.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/formContentFilters',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Init our fieldContent view and load filter arrays.\n\t\t\t */\n\t\t\tthis.viewFilters = [];\n\t\t\tthis.loadFilters = [];\n\n\t\t\t/*\n\t\t\t * Listen for requests to add new formContent filters.\n\t\t\t */\n\t\t\tnfRadio.channel( 'formContent' ).reply( 'add:viewFilter', this.addViewFilter, this );\n\t\t\tnfRadio.channel( 'formContent' ).reply( 'add:loadFilter', this.addLoadFilter, this );\n\n\t\t\t/*\n\t\t\t * Listen for requests to get our formContent filters.\n\t\t\t */\n\t\t\tnfRadio.channel( 'formContent' ).reply( 'get:viewFilters', this.getViewFilters, this );\n\t\t\tnfRadio.channel( 'formContent' ).reply( 'get:loadFilters', this.getLoadFilters, this );\n\n\t\t\t/*\n\t\t\t * -- DEPRECATED RADIO REPLIES --\n\t\t\t * \n\t\t\t * The 'fieldContents' channel has been deprecated as of 3.0 (it was present in the RC) in favour of 'formContent'.\n\t\t\t * Listen for requests to add new fieldContent filters.\n\t\t\t * \n\t\t\t * TODO: These radio listeners on the 'fieldContents' channels are here for backwards compatibility and should be removed eventually.\n\t\t\t */\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'add:viewFilter', this.addViewFilter, this );\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'add:loadFilter', this.addLoadFilter, this );\n\n\t\t\t/*\n\t\t\t * Listen for requests to get our fieldContent filters.\n\t\t\t * TODO: Remove eventually.\n\t\t\t */\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'get:viewFilters', this.getViewFilters, this );\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'get:loadFilters', this.getLoadFilters, this );\n\t\t\n\t\t\t/*\n\t\t\t * -- END DEPRECATED --\n\t\t\t */\n\t\t},\n\n\t\taddViewFilter: function( callback, priority ) {\n\t\t\tthis.viewFilters[ priority ] = callback;\n\t\t},\n\n\t\tgetViewFilters: function() {\n\t\t\treturn this.viewFilters;\n\t\t},\n\n\t\taddLoadFilter: function( callback, priority ) {\n\t\t\tthis.loadFilters[ priority ] = callback;\n\t\t},\n\n\t\tgetLoadFilters: function() {\n\t\t\treturn this.loadFilters;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'views/fieldItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\n\t\tinitialize: function() {\n    \t\tthis.listenTo( this.model, 'reRender', this.render, this );\n    \t\tthis.listenTo( this.model, 'change:addWrapperClass', this.addWrapperClass, this );\n    \t\tthis.listenTo( this.model, 'change:removeWrapperClass', this.removeWrapperClass, this );\n\n    \t\tthis.template = '#tmpl-nf-field-' + this.model.get( 'wrap_template' );\n\t\t},\n\n\t\ttest: function( model ) {\n\t\t\tconsole.log( 'firing from trigger 1' );\n\t\t},\n\n\t\taddWrapperClass: function() {\n\t\t\tvar cl = this.model.get( 'addWrapperClass' );\n\t\t\tif ( '' != cl ) {\n\t\t\t\tjQuery( this.el ).addClass( cl );\n\t\t\t\tthis.model.set( 'addWrapperClass', '' );\n\t\t\t}\n\t\t},\n\n\t\tremoveWrapperClass: function() {\n\t\t\tvar cl = this.model.get( 'removeWrapperClass' );\n\t\t\tif ( '' != cl ) {\n\t\t\t\tjQuery( this.el ).removeClass( cl );\n\t\t\t\tthis.model.set( 'removeWrapperClass', '' );\n\t\t\t}\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t   \t\t/*\n    \t\t * If we have an input mask, init that mask.\n    \t\t * TODO: Move this to a controller so that the logic isn't in the view.\n    \t\t */\n    \t\tif ( 'undefined' != typeof this.model.get( 'mask' ) && '' != jQuery.trim( this.model.get( 'mask' ) ) ) {\n    \t\t\tif ( 'custom' == this.model.get( 'mask') ) {\n    \t\t\t\tvar mask = this.model.get( 'custom_mask' );\n    \t\t\t} else {\n    \t\t\t\tvar mask = this.model.get( 'mask' );\n    \t\t\t}\n\n\n\t\t\t\t/* POLYFILL */ Number.isInteger = Number.isInteger || function(value) { return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value; };\n    \t\t\tif ( Number.isInteger( mask ) ) {\n    \t\t\t\tmask = mask.toString();\n    \t\t\t}\n\n    \t\t\tjQuery( this.el ).find( '.nf-element' ).mask( mask );\n    \t\t}\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'render:view', this );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'render:view', this );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\n\t\t\t\trenderElement: function(){\n\t\t\t\t\tvar tmpl = _.find( this.element_templates, function( tmpl ) {\n\t\t\t\t\t\tif ( 0 < jQuery( '#tmpl-nf-field-' + tmpl ).length ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-' + tmpl );\n\t\t\t\t\treturn template( this );\n\t\t\t\t},\n\n\t\t\t\trenderLabel: function() {\n\t\t\t\t\tvar template = nfRadio.channel( 'app' ).request( 'get:template',  '#tmpl-nf-field-label' );\n\t\t\t\t\treturn template( this );\n\t\t\t\t},\n\n\t\t\t\trenderLabelClasses: function () {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( 'undefined' != typeof this.customLabelClasses ) {\n\t\t\t\t\t\tclasses = this.customLabelClasses( classes );\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderPlaceholder: function() {\n\t\t\t\t\tvar placeholder = this.placeholder;\n\n\t\t\t\t\tif ( 'undefined' != typeof this.customPlaceholder ) {\n\t\t\t\t\t\tplaceholder = this.customPlaceholder( placeholder );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( '' != jQuery.trim( placeholder ) ) {\n\t\t\t\t\t\treturn 'placeholder=\"' + placeholder + '\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderWrapClass: function() {\n\t\t\t\t\tvar wrapClass = 'field-wrap ' + this.type + '-wrap';\n\n\t\t\t\t\t// If we have an old_classname defined, output wrap class for backward compatibility\n\t\t\t\t\tif ( 'undefined' != typeof this.old_classname && 0 < jQuery.trim( this.old_classname ).length ) {\n\t\t\t\t\t\twrapClass += ' ' + this.old_classname + '-wrap';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'undefined' != typeof customWrapClass ) {\n\t\t\t\t\t\twrapClass = customWrapClass( wrapClass );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn wrapClass;\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = this.classes;\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses = classes.replace( 'nf-error', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'undefined' != typeof this.element_class && 0 < jQuery.trim( this.element_class ).length ) {\n\t\t\t\t\t\tclasses += ' ' + this.element_class;\n\t\t\t\t\t}\n\n\t\t\t\t\t/*\n\t\t\t\t\t * If we have a function for adding extra classes, add those.\n\t\t\t\t\t */\n\n\t\t\t\t\tif ( 'undefined' != typeof this.customClasses ) {\n\t\t\t\t\t\tclasses = this.customClasses( classes );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\tmaybeDisabled: function() {\n\t\t\t\t\tif ( 1 == this.disable_input ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tmaybeDisableAutocomplete: function() {\n\t\t\t\t\tif ( 1 == this.disable_browser_autocomplete ) {\n\t\t\t\t\t\treturn 'autocomplete=\"off\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tmaybeInputLimit: function() {\n\t\t\t\t\tif ( 'characters' == this.input_limit_type && '' != jQuery.trim( this.input_limit ) ) {\n\t\t\t\t\t\treturn 'maxlength=\"' + this.input_limit + '\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tgetHelpText: function() {\n\t\t\t\t\t// this.help_text = jQuery( this.help_text ).html();\n\t\t\t\t\treturn ( 'undefined' != typeof this.help_text ) ? this.help_text.replace(/\"/g, \"&quot;\") : '';\n\t\t\t\t},\n\n\t\t\t\tmaybeRenderHelp: function() {\n\t\t\t\t\tvar check_text = '<p>' + this.help_text + '</p>';\n\t\t\t\t\tif ( 'undefined' != typeof this.help_text && 0 != jQuery.trim( jQuery( check_text ).text() ).length ) {\n\t\t\t\t\t\treturn '<span class=\"fa fa-info-circle nf-help\" data-text=\"' + this.getHelpText() + '\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderDescText: function() {\n\t\t\t\t\tif ( 'undefined' == typeof this.desc_text ) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\tvar check_text = '<p>' + this.desc_text + '</p>';\n\t\t\t\t\tif ( 0 != jQuery.trim( jQuery( check_text ).text() ).length ) {\n\t\t\t\t\t\treturn '<div class=\"nf-field-description\">' + this.desc_text + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tcurrencySymbol: function() {\n\t\t\t\t\tvar form = nfRadio.channel( 'app' ).request( 'get:form', that.model.get( 'formID' ) );\n\t\t\t\t\treturn form.get( 'settings' ).currency_symbol;\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .nf-element': 'fieldChange',\n\t\t\t'keyup .nf-element': 'fieldKeyup',\n\t\t\t'click .nf-element': 'fieldClick',\n\t\t\t'click .extra': 'extraClick',\n\t\t\t'blur .nf-element': 'fieldBlur'\n\t\t},\n\n\t\tfieldChange: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tvar response = nfRadio.channel( 'nfAdmin' ).request( 'change:field', el, this.model );\n\t\t},\n\n\t\tfieldKeyup: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tvar keyCode = e.keyCode;\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'keyup:field', el, this.model, keyCode );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'keyup:field', el, this.model, keyCode );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'keyup:field', el, this.model, keyCode );\n\t\t},\n\n\t\tfieldClick: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'click:field', el, this.model );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'click:field', el, this.model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'click:field', el, this.model );\n\t\t},\n\n\t\textraClick: function( e ) {\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'click:extra', e, this.model );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'click:extra', e, this.model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'click:extra', e, this.model );\n\t\t},\n\n\t\tfieldBlur: function( e ) {\n\t\t\tvar el = jQuery( e.currentTarget );\n\t\t\tnfRadio.channel( 'field-' + this.model.get( 'id' ) ).trigger( 'blur:field', el, this.model );\n\t\t\tnfRadio.channel( this.model.get( 'type' ) ).trigger( 'blur:field', el, this.model );\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'blur:field', el, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/beforeField',[], function() {\n    var view = Marionette.ItemView.extend({\n        tagName: 'nf-section',\n        template: '#tmpl-nf-field-before'\n    });\n\n    return view;\n} );\n","define( 'views/fieldErrorItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'nf-section',\n\t\ttemplate: '#tmpl-nf-field-error',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/fieldErrorCollection',['views/fieldErrorItem'], function( fieldErrorItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: \"nf-errors\",\n\t\tchildView: fieldErrorItem,\n\n\t\tinitialize: function( options ) {\n\t\t\tthis.fieldModel = options.fieldModel;\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( 0 == this.fieldModel.get( 'errors' ).models.length ) {\n                this.fieldModel.removeWrapperClass( 'nf-error' );\n                this.fieldModel.removeWrapperClass( 'nf-fail' );\n                this.fieldModel.addWrapperClass( 'nf-pass' );\n            } else {\n                this.fieldModel.removeWrapperClass( 'nf-pass' );\n                this.fieldModel.addWrapperClass( 'nf-fail' );\n                this.fieldModel.addWrapperClass( 'nf-error' );\n            }\n\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/inputLimit',[], function() {\n    var view = Marionette.ItemView.extend({\n        tagName: 'nf-section',\n        template: '#tmpl-nf-field-input-limit',\n\n        initialize: function() {\n        \tthis.listenTo( nfRadio.channel( 'field-' + this.model.get( 'id' ) ), 'keyup:field', this.updateCount );\n        \tthis.count = this.model.get( 'input_limit' );\n        \tthis.render();\n        },\n\n        updateCount: function( el, model ) {\n            var value = jQuery( el ).val();\n            var regex = /\\s+/gi;\n            var words = value.trim().replace(regex, ' ').split(' ');\n            var wordCount = words.length;\n            var charCount = value.length;\n\n            if ( 'characters' == this.model.get( 'input_limit_type' ) ) {\n                jQuery( el ).attr( 'maxlength', this.model.get( 'input_limit' ) );\n                this.count = this.model.get( 'input_limit' ) - charCount;\n            } else {\n                this.count = this.model.get( 'input_limit' ) - wordCount;\n                var limit = this.model.get( 'input_limit' );\n                if( wordCount > limit ){\n                    jQuery( el ).val( words.slice( 0, limit).join( ' ' ) );\n                }\n            }\n\n        \tthis.render();\n        },\n\n        templateHelpers: function() {\n        \tvar that = this;\n        \treturn {\n        \t\tcurrentCount: function() {\n        \t\t\treturn that.count;\n        \t\t}\n        \t}\n        }\n\n    });\n\n    return view;\n} );\n","define( 'views/afterField',['views/fieldErrorCollection', 'views/inputLimit'], function( fieldErrorCollection, InputLimitView ) {\n    var view = Marionette.ItemView.extend({\n        tagName: 'nf-section',\n        template: '#tmpl-nf-field-after',\n\n        initialize: function() {\n    \t\tthis.model.on( 'change:errors', this.changeError, this );\n        },\n\n        onRender: function() {\n        \t/*\n        \t * If we have an error, render our error view.\n        \t * TODO: Perhaps move to a controller?\n        \t */\n        \tvar errorEl = jQuery( this.el ).children( '.nf-error-wrap' );\n    \t\tthis.errorCollectionView = new fieldErrorCollection( { el: errorEl, collection: this.model.get( 'errors' ), fieldModel: this.model } );\n            if ( 0 < this.model.get( 'errors' ).length ) {\n               this.errorCollectionView.render(); \n            }\n            \n    \t\t/*\n    \t\t * If we have an input limit set, render the view that contains our counter\n    \t\t * TODO: Move this to a controller so that the logic isn't in the view.\n    \t\t */\n    \t\tif ( 'undefined' != typeof this.model.get( 'input_limit' ) && '' != jQuery.trim( this.model.get( 'input_limit' ) ) ){\n    \t\t\tvar inputLimitEl = jQuery( this.el ).children( '.nf-input-limit');\n    \t\t\tthis.inputLimitView = new InputLimitView( { el: inputLimitEl, model: this.model } );\n    \t\t}\n        },\n\n        changeError: function() {\n\t\t\tthis.errorCollectionView.render();\n\t\t},\n\n    });\n\n    return view;\n} );\n","define( 'views/fieldLayout',['views/fieldItem', 'views/beforeField', 'views/afterField'], function( fieldItem, beforeField, afterField ) {\n\n    var view = Marionette.LayoutView.extend({\n        tagName: 'nf-field',\n\n        regions: {\n            beforeField: '.nf-before-field',\n            field: '.nf-field',\n            afterField: '.nf-after-field',\n        },\n\n        initialize: function() {\n            this.listenTo( this.model, 'change:visible', this.render, this );\n        },\n\n        getTemplate: function() {\n            if ( this.model.get( 'visible' ) ) {\n                return '#tmpl-nf-field-layout';\n            } else {\n                return '#tmpl-nf-empty';\n            }\n        },\n\n        onRender: function() {\n            if ( this.model.get( 'visible' ) ) {\n                this.beforeField.show( new beforeField( { model: this.model } ) );\n                this.field.show( new fieldItem( { model: this.model } ) );\n                this.afterField.show( new afterField( { model: this.model } ) );\n            }\n        },\n\n        templateHelpers: function() {\n            return {\n                renderContainerClass: function() {\n                    var containerClass = ' label-' + this.label_pos + ' ';\n                    // If we have a description position, add that to our container.\n                    if ( 'undefined' != typeof this.desc_pos ) {\n                        containerClass += 'desc-' + this.desc_pos + ' ';\n                    }\n                    // if we have a container_class field setting, add that to our container.\n                    if ( 'undefined' != typeof this.container_class && 0 < jQuery.trim( this.container_class ).length ) {\n                        containerClass += this.container_class + ' ';\n                    }\n\n                    return containerClass;\n                }\n            }\n        }\n\n    });\n\n    return view;\n} );\n\n","/**\n * Return views that might be used in extensions.\n * These are un-instantiated views.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/loadViews',['views/fieldItem', 'views/fieldLayout'], function( fieldItemView, fieldLayoutView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Reply to requests for our field item view.\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:fieldItem', this.getFieldItem );\n\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:fieldLayout', this.getFieldLayout );\n\t\t},\n\n\t\tgetFieldItem: function( model ) {\n\t\t\treturn fieldItemView;\n\t\t},\n\n\t\tgetFieldLayout: function() {\n\t\t\treturn fieldLayoutView;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * If a form has at least one field error, we should disable the submit button and add a form error.\n * If a form had errors, but all the field errors have been removed, we should remove the form error.\n *\n * @since 3.0\n */\ndefine('controllers/formErrors',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Listen for error messages being added to and removed from fields.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:error', this.addError );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'remove:error', this.removeError );\n\n\t\t\t/*\n\t\t\t * Respond to requests to get form errors\n\t\t\t */\n\t\t\tnfRadio.channel( 'form' ).reply( 'get:errors', this.getFormErrors );\n\t\t},\n\n\t\taddError: function( fieldModel, errorID, errorMsg ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', fieldModel.get( 'formID' ) );\n\t\t\t/*\n\t\t\t * We store our errors in this object by field ID so that we don't have to loop over all our fields when we're testing for errors.\n\t\t\t * They are stored as an object within an array, using the field ID as the key.\n\t\t\t *\n\t\t\t * If we haven't setup an array item for this field, set it as an object.\n\t\t\t */\n\t\t\tif ( 'undefined' == typeof formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] ) {\n\t\t\t\tformModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] = {};\n\t\t\t}\n\t\t\t// Add an error to our tracking array\n\t\t\tformModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ][ errorID ] = errorMsg;\n\t\t\t/*\n\t\t\t * We have at least one field error, so submmission should be prevented.\n\t\t\t * Add a form error.\n\t\t\t */\n\t\t\tnfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ).request( 'add:error', 'field-errors', formModel.get( 'settings' ).formErrorsCorrectErrors );\n\t\t},\n\n\t\tremoveError: function( fieldModel, errorID ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', fieldModel.get( 'formID' ) );\n\t\t\t// Remove this error ID from our tracking array.\n\t\t\tformModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] = _.omit( formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ], errorID );\n\t\t\t/*\n\t\t\t * If we don't have any more error IDs on this field, then we need to remove this field from the array.\n\t\t\t *\n\t\t\t * Then, if the fieldErrors tracking array has a length of 0, we remove our form error, because all field errors have been dealt with.\n\t\t\t */\n\t\t\tif ( 0 == _.size( formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ] ) ) {\n\t\t\t\tdelete formModel.get( 'fieldErrors' )[ fieldModel.get( 'id' ) ];\n\t\t\t}\n\n\t\t\tif ( 0 == _.size( formModel.get( 'fieldErrors' ) ) ) {\n\t\t\t\t// Remove our form error.\n\t\t\t\tnfRadio.channel( 'form-' + fieldModel.get( 'formID' ) ).request( 'remove:error', 'field-errors' );\n\t\t\t}\n\t\t},\n\n\t\tgetFormErrors: function( formID ) {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:form', formID );\n\t\t\tvar errors = false;\n\t\t\t\n\t\t\tif ( formModel ) {\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have any errors on our form model.\n\t\t\t\t */\n\t\t\t\tif ( 0 !== formModel.get( 'errors' ).length ) {\n\t\t\t\t\t_.each( formModel.get( 'errors' ).models, function( error ) {\n\t\t\t\t\t\terrors = errors || {};\n\t\t\t\t\t\terrors[ error.get( 'id' ) ] = error.get( 'msg' );\n\t\t\t\t\t} );\t\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t}\n\t\t\treturn errors;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles submission of our form.\n */\ndefine('controllers/submit',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'forms' ), 'init:model', this.registerSubmitHandler );\n\t\t},\n\n\t\t/**\n\t\t * Register the submission handler function.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Backbone.model \tformModel\n\t\t * @return void\n\t\t */\n\t\tregisterSubmitHandler: function( formModel ) {\n\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).reply( 'submit', this.submit );\n\t\t},\n\n\t\t/**\n\t\t * Handles the actual submission of our form.\n\t\t * When we submit:\n\t\t *\n\t\t * 1) Send out a message saying that we're about to begin form submission.\n\t\t * 2) Check the form for errors\n\t\t * 3) Submit the data\n\t\t * 4) Send out a message with our response\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Backbone.model \tformModel\n\t\t * @return void\n\t\t */\n\t\tsubmit: function( formModel ) {\n\n\t\t\t/*\n\t\t\t * Send out a radio message saying that we're about to begin submitting.\n\t\t\t * First we send on the generic forms channel, and then on the form-specific channel.\n\t\t\t */\n\t\t\tnfRadio.channel( 'forms' ).trigger( 'before:submit', formModel );\n\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'before:submit', formModel );\n\t\t\t/*\n\t\t\t * Validate our field models.\n\t\t\t *\n\t\t\t * This method is defined in our models/fieldCollection.js file.\n\t\t\t */\n\t\t\tformModel.get( 'formContentData' ).validateFields();\n\n\t\t\tvar submit = nfRadio.channel( 'form-' + formModel.get( 'id' ) ).request( 'maybe:submit', formModel );\n\n\t\t\tif ( false == submit ) {\n\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:cancel', formModel );\n\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:cancel', formModel );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Make sure we don't have any form errors before we submit.\n\t\t\t * Return false if we do.\n\t\t\t */\n\t\t\tif ( 0 != _.size( formModel.get( 'fieldErrors' ) ) ) {\n\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:failed', formModel );\n\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:failed', formModel );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Actually submit our form, and send out a message with our response.\n\t\t\t */\n\n \t\t\tvar formID = formModel.get( 'id' );\n\t\t\tvar fields = {};\n\t\t\t_.each( formModel.get( 'fields' ).models, function( field ) {\n\t\t\t\tvar fieldDataDefaults = { value:field.get( 'value' ), id:field.get( 'id' ) };\n\n\t\t\t\t// Add field data at the field ID for efficient access.\n\t\t\t\tfields[ field.get( 'id' ) ] = nfRadio.channel( field.get( 'type' ) ).request( 'get:submitData', fieldDataDefaults, field ) || fieldDataDefaults;;\n\t\t\t} );\n\t\t\tvar extra = formModel.get( 'extra' );\n\t\t\tvar settings = formModel.get( 'settings' );\n\t\t\tdelete settings.formContentData;\n\t\t\tvar formData = JSON.stringify( { id: formID, fields: fields, settings: settings, extra: extra } );\n\t\t\tvar data = {\n\t\t\t\t'action': 'nf_ajax_submit',\n\t\t\t\t'security': nfFrontEnd.ajaxNonce,\n\t\t\t\t'formData': formData\n\t\t\t}\n\n\t\t\tvar that = this;\n\n\t\t\tjQuery.ajax({\n\t\t\t    url: nfFrontEnd.adminAjax,\n\t\t\t    type: 'POST',\n\t\t\t    data: data,\n\t\t\t    cache: false,\n\t\t\t   \tsuccess: function( data, textStatus, jqXHR ) {\n\t\t\t   \t\ttry {\n\t\t\t\t   \t\tvar response = jQuery.parseJSON( data );\n\t\t\t\t        nfRadio.channel( 'forms' ).trigger( 'submit:response', response, textStatus, jqXHR, formModel.get( 'id' ) );\n\t\t\t\t    \tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:response', response, textStatus, jqXHR );\n\t\t\t   \t\t} catch( e ) {\n\t\t\t   \t\t\tconsole.log( 'Parse Error' );\n\t\t\t   \t\t}\n\n\t\t\t    },\n\t\t\t    error: function( jqXHR, textStatus, errorThrown ) {\n\t\t\t        // Handle errors here\n\t\t\t        console.log('ERRORS: ' + errorThrown);\n\t\t\t\t\tconsole.log( jqXHR );\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar response = jQuery.parseJSON( jqXHR.responseText );\n\t\t\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:response', response, textStatus, jqXHR, formModel.get( 'id' ) );\n\t\t\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:response', response, textStatus, jqXHR );\n\t\t\t\t\t} catch( e ) {\n\t\t\t\t\t\tconsole.log( 'Parse Error' );\n\t\t\t\t\t}\n\n\t\t\t        // STOP LOADING SPINNER\n\t\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:response', 'error', textStatus, jqXHR, errorThrown );\n\t\t\t    }\n\t\t\t});\n\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'views/fieldCollection',['views/fieldLayout'], function( fieldLayout ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: 'nf-fields-wrap',\n\t\tchildView: fieldLayout\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Default filters\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/defaultFilters',[ 'views/fieldCollection', 'models/fieldCollection' ], function( FieldCollectionView, FieldCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'before:filterData', this.registerDefaultDataFilter );\n\t\t},\n\n\t\tregisterDefaultDataFilter: function( formModel ) {\n\t\t\t/*\n\t\t\t * Set our default formContent load filter\n\t\t\t */\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:loadFilter', this.defaultFormContentLoad, 10, this );\n\t\t\t/*\n\t\t\t * Set our default formContentView.\n\t\t\t */\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:viewFilter', this.defaultFormContentView, 10, this );\n\t\t},\n\n\t\tdefaultFormContentLoad: function( formContentData, formModel, context ) {\n\t\t\tvar fieldCollection = formModel.get( 'fields' );\n\t\t\t/*\n\t\t\t * If we only have one load filter, we can just return the field collection.\n\t\t\t */\n\t\t\tvar formContentLoadFilters = nfRadio.channel( 'formContent' ).request( 'get:loadFilters' );\n\t\t\tvar sortedArray = _.without( formContentLoadFilters, undefined );\n\t\t\tif ( 1 == sortedArray.length || 'undefined' == typeof formContentData || true === formContentData instanceof Backbone.Collection ) return formModel.get( 'fields' );\n\n        \tvar fieldModels = _.map( formContentData, function( key ) {\n        \t\treturn formModel.get( 'fields' ).findWhere( { key: key } );\n        \t}, this );\n\n        \tvar currentFieldCollection = new FieldCollection( fieldModels );\n\n        \tfieldCollection.on( 'reset', function( collection ) {\n        \t\tvar resetFields = [];\n        \t\tcurrentFieldCollection.each( function( fieldModel ) {\n        \t\t\tif ( 'submit' != fieldModel.get( 'type' ) ) {\n        \t\t\t\tresetFields.push( collection.findWhere( { key: fieldModel.get( 'key' ) } ) );\n        \t\t\t} else {\n        \t\t\t\tresetFields.push( fieldModel );\n        \t\t\t}\n        \t\t} );\n\n        \t\tcurrentFieldCollection.reset( resetFields );\n        \t} );\n\n        \treturn currentFieldCollection;\n        },\n\n        defaultFormContentView: function() {\n        \treturn FieldCollectionView;\n        }\n\n\t});\n\n\treturn controller;\n} );\n","define(\n\t'controllers/loadControllers',[\n\t\t'controllers/formData',\n\t\t'controllers/fieldError',\n\t\t'controllers/changeField',\n\t\t'controllers/changeEmail',\n\t\t'controllers/fieldCheckbox',\n\t\t'controllers/fieldCheckboxList',\n\t\t'controllers/fieldRadio',\n\t\t'controllers/fieldNumber',\n\t\t'controllers/mirrorField',\n\t\t'controllers/confirmField',\n\t\t'controllers/updateFieldModel',\n\t\t'controllers/submitButton',\n\t\t'controllers/submitDebug',\n\t\t'controllers/getFormErrors',\n\t\t'controllers/validateRequired',\n\t\t'controllers/submitError',\n\t\t'controllers/actionRedirect',\n\t\t'controllers/actionSuccess',\n\t\t'controllers/fieldSelect',\n\t\t'controllers/coreSubmitResponse',\n\t\t'controllers/fieldProduct',\n\t\t'controllers/fieldTotal',\n\t\t'controllers/fieldQuantity',\n\t\t'controllers/calculations',\n\t\t'controllers/fieldDate',\n\t\t'controllers/fieldRecaptcha',\n\t\t'controllers/helpText',\n\t\t'controllers/fieldTextareaRTE',\n\t\t'controllers/fieldStarRating',\n\t\t'controllers/fieldTerms',\n\t\t'controllers/formContentFilters',\n\t\t'controllers/loadViews',\n\t\t'controllers/formErrors',\n\t\t'controllers/submit',\n\t\t'controllers/defaultFilters'\n\t],\n\tfunction(\n\t\tFormData,\n\t\tFieldError,\n\t\tChangeField,\n\t\tChangeEmail,\n\t\tFieldCheckbox,\n\t\tFieldCheckboxList,\n\t\tFieldRadio,\n\t\tFieldNumber,\n\t\tMirrorField,\n\t\tConfirmField,\n\t\tUpdateFieldModel,\n\t\tSubmitButton,\n\t\tSubmitDebug,\n\t\tGetFormErrors,\n\t\tValidateRequired,\n\t\tSubmitError,\n\t\tActionRedirect,\n\t\tActionSuccess,\n\t\tFieldSelect,\n\t\tCoreSubmitResponse,\n\t\tFieldProduct,\n\t\tFieldTotal,\n\t\tFieldQuantity,\n\t\tCalculations,\n\t\tFieldDate,\n\t\tFieldRecaptcha,\n\t\tHelpText,\n\t\tFieldTextareaRTE,\n\t\tFieldStarRating,\n\t\tFieldTerms,\n\t\tFormContentFilters,\n\t\tLoadViews,\n\t\tFormErrors,\n\t\tSubmit,\n\t\tDefaultFilters\n\t) {\n\t\tvar controller = Marionette.Object.extend( {\n\t\t\tinitialize: function() {\n\n\t\t\t\t/**\n\t\t\t\t * App Controllers\n\t\t\t\t */\n\t\t\t\tnew LoadViews();\n\t\t\t\tnew FormErrors();\n\t\t\t\tnew Submit();\n\t\t\t\t\n\t\t\t\t/**\n\t\t\t\t * Field type controllers\n\t\t\t\t */\n\t\t\t\tnew FieldCheckbox();\n\t\t\t\tnew FieldCheckboxList();\n\t\t\t\tnew FieldRadio();\n\t\t\t\tnew FieldNumber();\n\t\t\t\tnew FieldSelect();\n\t\t\t\tnew FieldProduct();\n\t\t\t\tnew FieldTotal();\n\t\t\t\tnew FieldQuantity();\n\t\t\t\tnew FieldRecaptcha();\n\t\t\t\tnew HelpText();\n\t\t\t\tnew FieldTextareaRTE();\n\t\t\t\tnew FieldStarRating();\n\t\t\t\tnew FieldTerms();\n\t\t\t\tnew FormContentFilters();\n\t\t\t\t/**\n\t\t\t\t * Misc controllers\n\t\t\t\t */\n\t\t\t\tnew FieldError();\n\t\t\t\tnew ChangeField();\n\t\t\t\tnew ChangeEmail();\n\t\t\t\t\n\t\t\t\tnew MirrorField();\n\t\t\t\tnew ConfirmField();\n\t\t\t\tnew UpdateFieldModel();\n\t\t\t\tnew SubmitButton();\n\t\t\t\tnew SubmitDebug();\n\t\t\t\tnew GetFormErrors();\n\t\t\t\tnew ValidateRequired();\n\t\t\t\tnew SubmitError();\n\t\t\t\tnew ActionRedirect();\n\t\t\t\tnew ActionSuccess();\n\t\t\t\t\n\t\t\t\tnew CoreSubmitResponse();\n\t\t\t\tnew Calculations();\n\n\t\t\t\tnew DefaultFilters();\n\n\t\t\t\t/**\n\t\t\t\t * Data controllers\n\t\t\t\t */\n\t\t\t\tnew FieldDate();\n\t\t\t\tnew FormData();\n\t\t\t\t\n\t\t\t}\n\t\t});\n\n\t\treturn controller;\n} );\n\n","define( 'views/beforeForm',[], function( ) {\n\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: \"nf-section\",\n\t\ttemplate: \"#tmpl-nf-before-form\",\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/formErrorItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'nf-section',\n\t\ttemplate: '#tmpl-nf-form-error',\n\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/formErrorCollection',['views/formErrorItem'], function( formErrorItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: \"nf-errors\",\n\t\tchildView: formErrorItem\n\t});\n\n\treturn view;\n} );\n","define( 'views/honeyPot',[], function() {\n    var view = Marionette.ItemView.extend({\n        tagName: 'nf-section',\n        template: '#tmpl-nf-form-hp',\n\n        events: {\n        \t'keyup .nf-field-hp': 'maybeError',\n            'change .nf-field-hp': 'maybeError'\n        },\n\n        maybeError: function( e ) {\n            /*\n             * If we have an empty honeyPot field, remove the honeypot form error.\n             * If we do not have an empty honeyPot field, add the honeypot form error.\n             */\n            if ( 0 == jQuery( e.target ).val().length ) {\n                nfRadio.channel( 'form-' + this.model.get( 'id' ) ).request( 'remove:error', 'honeyPot' );\n            } else {\n                var formModel  = nfRadio.channel( 'app'    ).request( 'get:form',  this.model.get( 'id' ) );\n                nfRadio.channel( 'form-' + this.model.get( 'id' ) ).request( 'add:error', 'honeyPot', formModel.get( 'settings' ).honeypotHoneypotError );\n            }\n        }\n    });\n\n    return view;\n} );\n","define( 'views/afterFormContent',['views/formErrorCollection', 'views/honeyPot'], function( FormErrors, HoneyPot ) {\n\n    var view = Marionette.LayoutView.extend({\n        tagName: \"nf-section\",\n        template: \"#tmpl-nf-after-fields\",\n\n\t\tregions: {\n\t\t\terrors: \".nf-form-errors\",\n            hp: \".nf-form-hp\"\n\t\t},\n\n        onShow: function() {\n        \tthis.errors.show( new FormErrors( { collection: this.model.get( 'errors' ) } ) );\n            this.hp.show( new HoneyPot( { model: this.model } ) );\n        }\n\n    });\n\n    return view;\n} );\n","define( 'views/beforeFormContent',[], function( ) {\n\n    var view = Marionette.ItemView.extend({\n        tagName: \"nf-section\",\n        template: \"#tmpl-nf-before-fields\",\n\n        templateHelpers: function () {\n            return {\n\n                renderFieldsMarkedRequired: function() {\n\n                    var requiredFields = this.fields.filter( { required: 1 } );\n                    return ( requiredFields.length ) ? this.fieldsMarkedRequired : '';\n                },\n            };\n        },\n\n    });\n\n    return view;\n} );\n","define( 'views/formLayout',[ 'views/afterFormContent', 'views/beforeFormContent', 'models/fieldCollection' ], function( AfterFormContent, BeforeFormContent, FieldCollection ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: \"nf-section\",\n\t\ttemplate: \"#tmpl-nf-form-layout\",\n\n\t\tregions: {\n\t\t\tbeforeFormContent: \".nf-before-form-content\",\n\t\t\tformContent: \".nf-form-content\",\n\t\t\tafterFormContent: \".nf-after-form-content\"\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'form-' + this.model.get( 'id' ) ).reply( 'get:el', this.getEl, this );\n\t\t\t\n\t\t\t/*\n\t\t\t * If we need to hide a form, set the visibility of this form to hidden.\n\t\t\t */\n\t\t\t this.listenTo( this.model, 'hide', this.hide );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.beforeFormContent.show( new BeforeFormContent( { model: this.model } ) );\n\t\t\t\n\t\t\t/*\n\t\t\t * Set our formContentData to our form setting 'formContentData'\n\t\t\t */\n\t\t\tvar formContentData = this.model.get( 'formContentData' );\n\t\t\t\n\t\t\t/*\n\t\t\t * Check our fieldContentViewsFilter to see if we have any defined.\n\t\t\t * If we do, overwrite our default with the view returned from the filter.\n\t\t\t */\n\t\t\tvar formContentViewFilters = nfRadio.channel( 'formContent' ).request( 'get:viewFilters' );\n\t\t\t\n\t\t\t/* \n\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t*/\n\t\t\tvar sortedArray = _.without( formContentViewFilters, undefined );\n\t\t\tvar callback = _.first( sortedArray );\n\t\t\tformContentView = callback();\n\t\t\t\n\t\t\tvar options = {\n\t\t\t\tdata: formContentData,\n\t\t\t\tformModel: this.model\n\t\t\t};\n\t\t\t\n\t\t\t/*\n\t\t\t * If we have a collection, pass the returned data as the collection.\n\t\t\t *\n\t\t\t * If we have a model, pass the returned data as the collection.\n\t\t\t */\n\t\t\tif ( false !== formContentData instanceof Backbone.Collection ) {\n\t\t\t\toptions.collection = formContentData;\n\t\t\t} else if ( false !== formContentData instanceof Backbone.Model ) {\n\t\t\t\toptions.model = formContentData;\n\t\t\t}\n\n\t\t\tthis.formContent.show( new formContentView( options ) );\n\t\t\tthis.afterFormContent.show( new AfterFormContent( { model: this.model } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn this.el;\n\t\t},\n\n        templateHelpers: function () {\n            return {\n\n                renderClasses: function() {\n                    return '';\n                }\n\n            };\n        },\n\n        hide: function() {\n        \tjQuery( this.el ).hide();\n        }\n\n\t});\n\n\treturn view;\n} );\n","define( 'views/afterForm',[], function( ) {\n\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: \"nf-section\",\n\t\ttemplate: \"#tmpl-nf-after-form\",\n\t\t\n\t});\n\n\treturn view;\n} );\n","define( 'views/mainLayout',['views/beforeForm', 'views/formLayout', 'views/afterForm'], function( BeforeForm, FormLayout, AfterForm ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttemplate: '#tmpl-nf-layout',\n\n\t\tregions: {\n\t\t\tresponseMsg: '.nf-response-msg',\n\t\t\tbeforeForm: '.nf-before-form',\n\t\t\tformLayout: '.nf-form-layout',\n\t\t\tafterForm: '.nf-after-form'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.$el = jQuery( '#nf-form-' + this.model.id + '-cont' );\n\t\t\tthis.el = '#nf-form-' + this.model.id + '-cont';\n\n\t\t\tthis.render();\n\n\t\t\tthis.beforeForm.show( new BeforeForm( { model: this.model } ) );\n\t\t\tthis.formLayout.show( new FormLayout( { model: this.model, fieldCollection: this.options.fieldCollection } ) );\n\t\t\tthis.afterForm.show( new AfterForm( { model: this.model } ) );\n\n\t\t\t/*\n\t\t\t * If we need to hide a form, set the visibility of this form to hidden.\n\t\t\t */\n\t\t\t this.listenTo( this.model, 'hide', this.hide );\n\t\t},\n\n        hide: function() {\n        \tjQuery( this.el ).find( '.nf-form-title' ).hide();\n        }\n\n\t});\n\n\treturn view;\n} );\n","jQuery( document ).ready( function( $ ) {\n\trequire( [ 'models/formCollection', 'models/formModel', 'models/fieldCollection', 'controllers/loadControllers', 'views/mainLayout'], function( formCollection, FormModel, FieldCollection, LoadControllers, mainLayout ) {\n\n\t\tvar NinjaForms = Marionette.Application.extend({\n\t\t\tforms: {},\n\t\t\tinitialize: function( options ) {\n\n\t\t\t\tvar that = this;\n\t\t\t\tMarionette.Renderer.render = function(template, data){\n\t\t\t\t\tvar template = that.template( template );\n\t\t\t\t\treturn template( data );\n\t\t\t\t};\n\n\t\t\t\t// Underscore one-liner for getting URL Parameters\n\t\t\t\tthis.urlParameters = _.object(_.compact(_.map(location.search.slice(1).split('&'), function(item) {  if (item) return item.split('='); })));\n\n\t\t\t\tif( 'undefined' != typeof this.urlParameters.nf_resume ) {\n\t\t\t\t\tthis.listenTo(nfRadio.channel('form-' + this.urlParameters.nf_resume), 'loaded', this.restart);\n\t\t\t\t}\n\n\t\t\t\tvar loadControllers = new LoadControllers();\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:loadControllers' );\n\n\t\t\t\tnfRadio.channel( 'app' ).reply( 'get:template', this.template );\n\t\t\t},\n\t\t\t\n\t\t\tonStart: function() {\n\t\t\t\tvar formCollection = nfRadio.channel( 'app' ).request( 'get:forms' );\n\t\t\t\t_.each( formCollection.models, function( form, index ) {\n\t\t\t\t\tvar layoutView = new mainLayout( { model: form, fieldCollection: form.get( 'fields' ) } );\t\t\t\n\t\t\t\t\tnfRadio.channel( 'form' ).trigger( 'render:view', layoutView );\n\t\t\t\t} );\n\t\t\t},\n\n\t\t\trestart: function( formModel ) {\n\t\t\t\tif( 'undefined' != typeof this.urlParameters.nf_resume ){\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\t'action': 'nf_ajax_submit',\n\t\t\t\t\t\t'security': nfFrontEnd.ajaxNonce,\n\t\t\t\t\t\t'nf_resume': this.urlParameters\n\t\t\t\t\t};\n\n\t\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'disable:submit' );\n\t\t\t\t\tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'processingLabel' );\n\n\t\t\t\t\tthis.listenTo( nfRadio.channel( 'form' ), 'render:view', function() {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * TODO: This needs to be re-worked for backbone. It's not dynamic enough.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Hide form fields (but not the submit button).\n\t\t\t\t\t\t */\n\t\t\t\t\t\tjQuery( '#nf-form-' + formModel.get( 'id' ) + '-cont .nf-field-container:not(.submit-container)' ).hide();\n\t\t\t\t\t});\n\n\t\t\t\t\t// TODO: Refactor Duplication\n\t\t\t\t\tjQuery.ajax({\n\t\t\t\t\t\turl: nfFrontEnd.adminAjax,\n\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tcache: false,\n\t\t\t\t\t\tsuccess: function( data, textStatus, jqXHR ) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t   \t\tvar response = jQuery.parseJSON( data );\n\t\t\t\t\t\t        nfRadio.channel( 'forms' ).trigger( 'submit:response', response, textStatus, jqXHR, formModel.get( 'id' ) );\n\t\t\t\t\t\t    \tnfRadio.channel( 'form-' + formModel.get( 'id' ) ).trigger( 'submit:response', response, textStatus, jqXHR );\n\t\t\t\t\t\t\t} catch( e ) {\n\t\t\t\t\t\t\t\tconsole.log( 'Parse Error' );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t    },\n\t\t\t\t\t    error: function( jqXHR, textStatus, errorThrown ) {\n\t\t\t\t\t        // Handle errors here\n\t\t\t\t\t        console.log('ERRORS: ' + textStatus);\n\t\t\t\t\t        // STOP LOADING SPINNER\n\t\t\t\t\t\t\tnfRadio.channel( 'forms' ).trigger( 'submit:response', 'error', textStatus, jqXHR, errorThrown );\n\t\t\t\t\t    }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttemplate: function( template ) {\n\t\t\t\treturn _.template( $( template ).html(),  {\n\t\t\t\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\n\t\t\t\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\t\t\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\t\t\t\tvariable:    'data'\n\t\t\t\t} );\n\t\t\t}\n\t\t});\n\t\n\t\tvar ninjaForms = new NinjaForms();\n\t\tninjaForms.start();\t\t\n\t} );\n} );\ndefine(\"main\", function(){});\n\n"],"sourceRoot":"/source/"}