{% set incomeOptions = [
  {'value':'', 'text':'Click to add an income type'},
  {'value':'Wages', 'text':'Wages, salaries, tips'},
  {'value':'Alimony', 'text':'Alimony received'},
  {'value':'Boarder', 'text':'Boarder or lodger'},
  {'value':'CashAssistance', 'text':'Cash Assistance grant'},
  {'value':'ChildSupport', 'text':'Child support received'},
  {'value':'DisabilityMedicaid', 'text':'Disability-related Medicaid'},
  {'value':'Gifts', 'text':'Gifts/contributions received'},
  {'value':'Pension', 'text':'Government or Private Pension'},
  {'value':'Investment', 'text':'Investment income interest, dividends, and profit from selling stocks'},
  {'value':'NYSDisability', 'text':'New York State Disability Benefits'},
  {'value':'Rental', 'text':'Rental income'},
  {'value':'SelfEmployment', 'text': 'Self-employment Income'},
  {'value':'SSDependent', 'text':'Social Security Dependent Benefits'},
  {'value':'SSDisability', 'text':'Social Security Disability Benefits'},
  {'value':'SSSurvivor', 'text':'Social Security Survivor’s Benefits'},
  {'value':'SSRetirement', 'text':'Social Security Retirement Benefits'},
  {'value':'SSI', 'text':'Supplemental Security Income SSI'},
  {'value':'Unemployment',  'text': 'Unemployment benefits'},
  {'value':'Veteran', 'text':'Veteran’s Pension or Benefits'},
  {'value':'DeferredComp', 'text':'Withdrawals from Deferred Compensation IRA, Keogh, etc.'},
  {'value':'WorkersComp', 'text':'Worker’s Compensation'}
] %}

{# {% set frequencyOptions = [
  {'value':'', 'text':'Click to add an income frequency'}
] %} #}

{% set frequencyOptions = [
  {'value': 'weekly', 'text': 'Every week'},
  {'value': 'biweekly', 'text': 'Every 2 weeks'},
  {'value': 'monthly', 'text': 'Every month', 'default': true},
  {'value': 'semimonthly', 'text': 'Every 2 months'},
  {'value': 'yearly', 'text': 'Every year'}
] %}

<fieldset class="d-block w-100">

  <div class="bg-grey-lightest b-bottom b-4 b-white p-relative" id="question-household-income">

    <div class="bg-blue-light ui-overlay js-toggle-question hidden"></div>

    <div class="p-relative">

      <a class="{{styles.questions}}" data-js="question" href="#question-household-income">
        {{ __('Household Income', 'accessnyc-screener') }}
      </a>

      <div class="p-horizontal-2 p-bottom-2 js-toggle-question hidden">

        <div >
          <label class="{{styles.labels}}">
            <span v-if="singleOccupant()">{{ __('Do you have an income?', 'accessnyc-screener') }}</span>
            <span v-else>{{ __('Do you and/or anyone in your household have income?', 'accessnyc-screener') }}</span>
          </label>
          <div class="screener-radio-buttons">
            <label class="screener-radio screener-label">
              <input name="toggle-income" type="radio" class="js-screener-toggle screener-radio-input sr-only" value="true"
                data-type="boolean"
                data-shows="#js-toggle-income">
              <span class="screener-radio-label">{{ __('Yes', 'accessnyc-screener') }}</span>
            </label>
            <label class="screener-radio screener-label">
              <input name="toggle-income" class="js-screener-toggle screener-radio-input sr-only" type="radio" value="false" checked
                data-type="boolean"
                data-hides="#js-toggle-income">
              <span class="screener-radio-label">{{ __('No', 'accessnyc-screener') }}</span>
            </label>
          </div>
        </div>

        <div id="js-toggle-income" class="hidden">

          <div v-if="!singleOccupant()">
            <label class="{{styles.labels}} m-top-2">
              {{ __('Who in your household contributes to your total household income?', 'accessnyc-screener') }}
            </label>

            <h4 class="{{styles.explainations}}">{{ __('What are sources of income?', 'accessnyc-screener') }}</h4>
            <p>{{ __('Sources of income can mean anything from disability-related Medicaid to wages, salaries, and tips.', 'accessnyc-screener') }}</p>

            <div v-for="(p, personIndex) in people">
              <label class="styled-checkbox screener-checkbox screener-label">
                <input class="js-screener-toggle" type="checkbox" value="1"
                  v-bind:name="'Person[' + personIndex + '].has-income'"
                  v-bind:data-toggles="'#js-toggle-people-' + personIndex + '-income'">
                <span class="styled-checkbox-label">
                  <personlabel v-bind:index="personIndex" v-bind:person="p._attrs"></personlabel>
                </span>
              </label>
            </div>
          </div>

          <div v-for="(p, personIndex) in people">
            <div v-bind:id="'js-toggle-people-' + personIndex + '-income'" v-bind:class="{hidden: !singleOccupant()}">

              <hr class="screener-divider">

              <label class="{{styles.labels}}">
                <span v-if="singleOccupant()">
                  {{ __('What is your primary income source?', 'accessnyc-screener') }}
                </span>
                <span v-else>
                  {{ __('What is the primary income source for', 'accessnyc-screener') }}
                  <personlabel v-bind:index="personIndex" v-bind:person="p._attrs"></personlabel>
                </span>
              </label>

              <select class="screener-select"
                data-income="0"
                data-key="incomes"
                data-subkey="type"

                v-bind:data-person="personIndex"
                v-bind:id="'person-' + personIndex + '-incomes-0'"
                v-bind:name="'Person[' + personIndex + '].incomes[0].type'"
                v-on:change="pushIncome">
                {% for option in incomeOptions %}
                <option value="{{ option.value }}">
                  {{ __(option.text, 'accessnyc-screener') }}
                </option>
                {% endfor %}
              </select>

              <div v-for="(income, incomeIndex) in p._attrs.incomes">
                <div>
                  <label class="{{styles.labels}} m-top-2">
                    <span v-if="singleOccupant()">
                      {{ __('How much do you receive for: ') }}
                      <span class="c-blue">v{ income.type }</span>{{ __('?', 'accessnyc-screener') }}
                    </span>
                    <span v-else>
                      {{ __('How much', 'accessnyc-screener') }}
                      <span v-if="personIndex == 0">{{ __('do', 'accessnyc-screener') }}</span>
                      <span v-else>{{ __('does', 'accessnyc-screener') }}</span>
                      <personlabel v-bind:index="personIndex" v-bind:person="p._attrs"></personlabel>
                      {{ __('receive for', 'accessnyc-screener') }}:
                      <span class="c-blue">v{ income.type }</span>{{ __('?', 'accessnyc-screener') }}
                    </span>
                    <span class="c-red">*</span>
                  </label>
                  <div class="m-bottom-2">
                    <div class="currency-usd m-0">
                      <input type="number" required
                        data-type="float"
                        v-model.number="income.amount"
                        v-bind:id="'person-' + personIndex + '-incomes-' + incomeIndex + '-amount'"
                        v-bind:name="'Person[' + personIndex + '].incomes[' + incomeIndex + '].amount'">
                    </div>
                  </div>
                </div>

                <div>
                  <label class="{{styles.labels}}">
                    <span v-if="singleOccupant()">
                      {{ __('How often do you receive: ') }}
                      <span class="c-blue">v{ income.type }</span>{{ __('?', 'accessnyc-screener') }}
                    </span>
                    <span v-else>
                      {{ __('How often', 'accessnyc-screener') }}
                      <span v-if="personIndex == 0">{{ __('do', 'accessnyc-screener') }}</span>
                      <span v-else>{{ __('does', 'accessnyc-screener') }}</span>
                      <personlabel v-bind:index="personIndex" v-bind:person="p._attrs"></personlabel>
                      {{ __('receive', 'accessnyc-screener') }}:
                      <span class="c-blue">v{ income.type }</span>{{ __('?', 'accessnyc-screener') }}
                    </span>
                  </label>
                  <div class="screener-checkboxes js-screener-checkbox-group">
                    {% for option in frequencyOptions %}
                    <label
                      class="styled-radio screener-checkbox screener-checkboxes-program screener-label"
                      v-bind:for="'person-' + personIndex + '-incomes-' + incomeIndex + '-frequency-{{ option.value }}'">
                      <input type="radio" value="{{ option.value }}"
                        v-model="income.frequency"
                        v-bind:id="'person-' + personIndex + '-incomes-' + incomeIndex + '-frequency-{{ option.value }}'"
                        v-bind:name="'Person[' + personIndex + '].incomes[' + incomeIndex + '].frequency'"/>
                      <span class="styled-radio-label">
                        {{ __(option.text, 'accessnyc-screener') }}
                      </span>
                    </label>
                    {% endfor %}
                  </div>
                </div>

                <div class="p-top p-bottom-2">
                  <hr class="m-0 screener-divider">
                </div>

                <div>
                  <label class="{{styles.labels}}">
                    <span v-if="singleOccupant()">
                      {{ __('If you have another source of income, select it below.', 'accessnyc-screener') }}
                    </span>
                    <span v-else>
                      {{ __('If', 'accessnyc-screener') }}
                      <personlabel v-bind:index="personIndex" v-bind:person="p._attrs"></personlabel>
                      {{ __('have another source of income, select it below', 'accessnyc-screener') }}
                    </span>
                  </label>
                  <select class="screener-select"
                      data-key="incomes"
                      data-subkey="type"

                      v-bind:data-income="incomeIndex + 1"
                      v-bind:data-person="personIndex"
                      v-bind:id="'person-' + personIndex + '-incomes-' + (incomeIndex + 1) + ''"
                      v-bind:name="'Person[' + personIndex + '].incomes[' + (incomeIndex + 1) + '].type'"
                      v-on:change="pushIncome">
                    {% for option in incomeOptions %}
                    <option value="{{ option.value }}">
                      {{ __(option.text, 'accessnyc-screener') }}
                    </option>
                    {% endfor %}
                  </select>
                </div>
              </div>

            </div>
          </div>

        </div>

      </div>

    </div>

  </div>

</fieldset>
