{% set incomeOptions = [
  {'value':'', 'text':'Click to add an income type'},
  {'value':'Wages', 'text':'Wages, salaries, tips'},
  {'value':'Alimony', 'text':'Alimony received'},
  {'value':'Boarder', 'text':'Boarder or lodger'},
  {'value':'CashAssistance', 'text':'Cash Assistance grant'},
  {'value':'ChildSupport', 'text':'Child support received'},
  {'value':'DisabilityMedicaid', 'text':'Disability-related Medicaid'},
  {'value':'Gifts', 'text':'Gifts/contributions received'},
  {'value':'Pension', 'text':'Government or Private Pension'},
  {'value':'Investment', 'text':'Investment income interest, dividends, and profit from selling stocks'},
  {'value':'NYSDisability', 'text':'New York State Disability Benefits'},
  {'value':'Rental', 'text':'Rental income'},
  {'value':'SelfEmployment', 'text': 'Self-employment Income'},
  {'value':'SSDependent', 'text':'Social Security Dependent Benefits'},
  {'value':'SSDisability', 'text':'Social Security Disability Benefits'},
  {'value':'SSSurvivor', 'text':'Social Security Survivor’s Benefits'},
  {'value':'SSRetirement', 'text':'Social Security Retirement Benefits'},
  {'value':'SSI', 'text':'Supplemental Security Income SSI'},
  {'value':'Unemployment',  'text': 'Unemployment benefits'},
  {'value':'Veteran', 'text':'Veteran’s Pension or Benefits'},
  {'value':'DeferredComp', 'text':'Withdrawals from Deferred Compensation IRA, Keogh, etc.'},
  {'value':'WorkersComp', 'text':'Worker’s Compensation'}
] %}

{# {% set frequencyOptions = [
  {'value':'', 'text':'Click to add an income frequency'}
] %} #}

{% set frequencyOptions = [
  {'value': 'weekly', 'text': 'Every week'},
  {'value': 'biweekly', 'text': 'Every 2 weeks'},
  {'value': 'monthly', 'text': 'Every month', 'default': true},
  {'value': 'semimonthly', 'text': 'Every 2 months'},
  {'value': 'yearly', 'text': 'Every year'}
] %}

<fieldset class="d-block w-100">

  <div class="bg-grey-lightest b-bottom b-4 b-white p-relative" id="question-household-income">

    <div class="bg-blue-light ui-overlay js-toggle-question hidden"></div>

    <div class="p-relative">

      <a class="{{styles.questions}}" data-js="question" href="#question-household-income">
        {{ __('Household Income', 'accessnyc-screener') }}
        <svg class="{{styles.warning}}" role="img" aria-label="{{ __('Some required fields are not filled out', 'accessnyc-screener') }}"
          v-if="errors.all('HouseholdIncome').length > 0">
          <title>{{ __('Some required fields are not filled out', 'accessnyc-screener') }}</title>
          <use xlink:href="#icon-warning"></use>
        </svg>
      </a>

      <div class="p-horizontal-2 p-bottom-2 js-toggle-question hidden">

        <div>
          <label class="{{styles.labels}}">
            <span v-if="singleOccupant()">{{ __('Do you have an income?', 'accessnyc-screener') }}</span>
            <span v-else>{{ __('Do you and/or anyone in your household have income?', 'accessnyc-screener') }}</span>
          </label>
          <div class="screener-radio-buttons">
            <label class="screener-radio screener-label">
              <input name="toggle-income" type="radio" class="js-screener-toggle screener-radio-input sr-only" value="1"
                data-key="incomes"
                v-model.number="income"
                v-on:change="removeAllPayments">
              <span class="screener-radio-label">{{ __('Yes', 'accessnyc-screener') }}</span>
            </label>
            <label class="screener-radio screener-label">
              <input name="toggle-income" type="radio" class="js-screener-toggle screener-radio-input sr-only" value="0" checked
                data-key="incomes"
                v-model.number="income"
                v-on:change="removeAllPayments">
              <span class="screener-radio-label">{{ __('No', 'accessnyc-screener') }}</span>
            </label>
          </div>
        </div>

        <div v-if="income">

          <div v-if="!singleOccupant()">
            <label class="{{styles.labels}} m-top-2">
              {{ __('Who in your household contributes to your total household income?', 'accessnyc-screener') }}
            </label>

            <h4 class="{{styles.explainations}}">{{ __('What are sources of income?', 'accessnyc-screener') }}</h4>
            <p>{{ __('Sources of income can mean anything from disability-related Medicaid to wages, salaries, and tips.', 'accessnyc-screener') }}</p>

            <label class="styled-checkbox screener-checkbox screener-label"
              v-for="(p, personIndex) in people">
              <input class="js-screener-toggle" type="checkbox" value="1"
                v-bind:name="'Person[' + personIndex + '].has-income'"
                v-bind:data-toggles="'#js-toggle-people-' + personIndex + '-income'">
              <span class="styled-checkbox-label">
                <personlabel v-bind:index="personIndex" v-bind:person="p._attrs"></personlabel>
              </span>
            </label>
          </div>

          <div v-for="(p, personIndex) in people">
            <div v-bind:id="'js-toggle-people-' + personIndex + '-income'" v-bind:class="{hidden: !singleOccupant()}">

              <hr class="screener-divider">

              <label class="{{styles.labels}}">
                <span v-if="singleOccupant()">
                  {{ __('What is your primary income source?', 'accessnyc-screener') }}
                </span>
                <span v-else>
                  {{ __('What is the primary income source for', 'accessnyc-screener') }}
                  <personlabel v-bind:index="personIndex" v-bind:person="p._attrs"></personlabel>
                </span>
              </label>

              <select class="screener-select"
                data-object="people"
                data-key="incomes"
                v-bind:data-index="personIndex"
                v-bind:id="'person-' + personIndex + '-incomes-0'"
                v-bind:name="'Person[' + personIndex + '].incomes[0].type'"
                v-on:change="pushPayment"
                v-if="p._attrs.incomes.length === 0">
                {% for option in incomeOptions %}
                <option value="{{ option.value }}">
                  {{ __(option.text, 'accessnyc-screener') }}
                </option>
                {% endfor %}
              </select>

              <div v-for="(income, incomeIndex) in p._attrs.incomes">

                <select class="screener-select"
                  data-object="people"
                  data-key="incomes"
                  v-bind:data-index="personIndex"
                  v-bind:data-key-index="incomeIndex"
                  v-bind:id="'person-' + personIndex + '-incomes-0'"
                  v-bind:name="'Person[' + personIndex + '].incomes[0].type'"
                  v-model="income.type"
                  v-on:change="removePayment">
                  {% for option in incomeOptions %}
                  <option value="{{ option.value }}">
                    {{ __(option.text, 'accessnyc-screener') }}
                  </option>
                  {% endfor %}
                </select>

                <div>
                  <label class="{{styles.labels}} m-top-2">
                    <span v-if="singleOccupant()">
                      {{ __('How much do you receive for: ') }}
                      <span class="c-blue">v{ localString(income.type) }</span>{{ __('?', 'accessnyc-screener') }}
                    </span>
                    <span v-else>
                      {{ __('How much', 'accessnyc-screener') }}
                      <span v-if="personIndex == 0">{{ __('do', 'accessnyc-screener') }}</span>
                      <span v-else>{{ __('does', 'accessnyc-screener') }}</span>
                      <personlabel v-bind:index="personIndex" v-bind:person="p._attrs"></personlabel>
                      {{ __('receive for', 'accessnyc-screener') }}:
                      <span class="c-blue">v{ localString(income.type) }</span>{{ __('?', 'accessnyc-screener') }}
                    </span>
                    <span class="c-red">*</span>
                  </label>
                  <div class="m-bottom-2">
                    <div class="screener-question-container"
                      v-bind:class="{'error': errors.has('HouseholdIncome.Person[' + personIndex + '].incomes[' + incomeIndex + '].amount')}">
                      <div class="error-message"
                        v-if="errors.has('HouseholdIncome.Person[' + personIndex + '].incomes[' + incomeIndex + '].amount')">
                          v{ errors.first('HouseholdIncome.Person[' + personIndex + '].incomes[' + incomeIndex + '].amount') }
                      </div>
                      <div class="currency-usd m-0">
                        <input type="text" pattern="\d*" required
                          data-type="float"
                          data-vv-scope="HouseholdIncome"
                          data-vv-as="{{ __('income amount', 'accessnyc-screener') }}"
                          data-js="calc-input,format-dollars"
                          data-js-regex="^([0-9]{1,6})(\.[0-9]{0,2})?$"
                          v-bind:id="'person-' + personIndex + '-incomes-' + incomeIndex + '-amount'"
                          v-bind:name="'Person[' + personIndex + '].incomes[' + incomeIndex + '].amount'"
                          v-validate="{required: true, regex: '^([0-9]{1,6})(\.[0-9]{0,2})?$', max: 9, decimal: 2}"
                          v-model.lazy="income.amount">
                      </div>
                    </div>
                  </div>
                </div>

                <div>
                  <label class="{{styles.labels}}">
                    <span v-if="singleOccupant()">
                      {{ __('How often do you receive: ') }}
                      <span class="c-blue">v{ localString(income.type) }</span>{{ __('?', 'accessnyc-screener') }}
                    </span>
                    <span v-else>
                      {{ __('How often', 'accessnyc-screener') }}
                      <span v-if="personIndex == 0">{{ __('do', 'accessnyc-screener') }}</span>
                      <span v-else>{{ __('does', 'accessnyc-screener') }}</span>
                      <personlabel v-bind:index="personIndex" v-bind:person="p._attrs"></personlabel>
                      {{ __('receive', 'accessnyc-screener') }}:
                      <span class="c-blue">v{ localString(income.type) }</span>{{ __('?', 'accessnyc-screener') }}
                    </span>
                    <span class="c-red">*</span>
                  </label>
                  <div class="screener-question-container"
                    v-bind:class="{'error': errors.has('Person[' + personIndex + '].incomes[' + incomeIndex + '].frequency', 'HouseholdIncome')}">
                    <div class="error-message"
                      v-if="errors.has('Person[' + personIndex + '].incomes[' + incomeIndex + '].frequency', 'HouseholdIncome')">
                        v{ errors.first('Person[' + personIndex + '].incomes[' + incomeIndex + '].frequency', 'HouseholdIncome') }
                    </div>
                    <div class="screener-checkboxes">
                      {% for option in frequencyOptions %}
                      <label
                        class="styled-radio screener-checkbox screener-checkboxes-program screener-label"
                        v-bind:for="'person-' + personIndex + '-incomes-' + incomeIndex + '-frequency-{{ option.value }}'">
                        <input type="radio" value="{{ option.value }}"
                          data-vv-scope="HouseholdIncome"
                          data-vv-as="{{ __('income frequency', 'accessnyc-screener') }}"
                          v-validate="{required: true}"
                          v-model="income.frequency"
                          v-bind:id="'person-' + personIndex + '-incomes-' + incomeIndex + '-frequency-{{ option.value }}'"
                          v-bind:name="'Person[' + personIndex + '].incomes[' + incomeIndex + '].frequency'"/>
                        <span class="styled-radio-label">
                          {{ __(option.text, 'accessnyc-screener') }}
                        </span>
                      </label>
                      {% endfor %}
                    </div>
                  </div>
                </div>

                <div class="p-top p-bottom-2">
                  <hr class="m-0 screener-divider">
                </div>

                <div>
                  <label class="{{styles.labels}}">
                    <span v-if="singleOccupant()">
                      {{ __('If you have another source of income, select it below.', 'accessnyc-screener') }}
                    </span>
                    <span v-else>
                      {{ __('If', 'accessnyc-screener') }}
                      <personlabel v-bind:index="personIndex" v-bind:person="p._attrs"></personlabel>
                      {{ __('have another source of income, select it below', 'accessnyc-screener') }}
                    </span>
                  </label>
                  <select class="screener-select"
                      data-key="incomes"
                      data-object="people"
                      v-bind:data-index="personIndex"
                      v-bind:id="'person-' + personIndex + '-incomes-' + (incomeIndex + 1) + ''"
                      v-bind:name="'Person[' + personIndex + '].incomes[' + (incomeIndex + 1) + '].type'"
                      v-on:change="pushPayment"
                      v-if="!p._attrs.incomes[incomeIndex + 1]">
                    {% for option in incomeOptions %}
                    <option value="{{ option.value }}">
                      {{ __(option.text, 'accessnyc-screener') }}
                    </option>
                    {% endfor %}
                  </select>
                </div>
              </div>

            </div>
          </div>

        </div>

      </div>

    </div>

  </div>

</fieldset>
